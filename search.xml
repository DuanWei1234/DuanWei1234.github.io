<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>STAG4D</title>
      <link href="/2024/05/30/STAG4D/"/>
      <url>/2024/05/30/STAG4D/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>文章将预训练的diffusion model和3D高斯组成高质量4D生成。多视角视频初始化是通过多视角diffusion model生成。为了保证初始化结果的时间一致性，引入了融合策略，将第一帧作为自注意力计算中的时间锚点。接着使用SDS优化4D高斯点云，为了使得4D高斯适用于生成任务，采用了自适应紧致性策略来消除高斯梯度的不稳定性形成鲁棒性优化。</p><h2 id="method">Method</h2><p>给定输入视频，先采用多视角diffusion model生成多视角一致的序列，提供时间和空间锚点。第二，接着使用多视角SDS和重建损失训练可变形的3D高斯。对于文本-4D生成，与text-to-image相结合即可。<br><img src="/2024/05/30/STAG4D/pipeline.png" alt="pipeline"></p><ol><li>4D Presentation</li></ol><p>4D Gaussian Splatting：<br>将4D场景建模为3D高斯点云，并附带一个基于平面六边形的变形场，即F=(S, t)，如下所示：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><msub><mi>X</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>s</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>σ</mi><mo separator="true">,</mo><mi>ζ</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F(S, t)=[X_t, s_t, r_t, \sigma, \zeta]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07378em;">ζ</span><span class="mclose">]</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>z</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>s</mi><mi>t</mi></msub><mo separator="true">,</mo><msub><mi>r</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">X_t=(x_t, y_t, z_t), s_t, r_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别代表t时刻高斯的位置、缩放和旋转。</p><p>Adaptive Densification:<br>在之前的4D高斯重建工作过程中，采用的密集化策略为基于视图空间位置梯度的固定密集化阈值。其在重建时，多视角图像提供了目标厂家鲁棒和冗余的覆盖，有很好的效果。但是当进行生成时其表现并不好。其限制源自于输入的单张图像火弹幕视频所加的约束，导致对每个训练对象的空间和尺度维度存在显著的不确定性。导致不同的情况下需要不同的最优阈值。<br>因此作者提出了自适应阈值方式，只有具备大梯度的候选进行密集化。方法对每个点的累计梯度进行统计分析，它在整个训练过程中遵循相似形状的对数分布。文章采用了自适应阈值，其会过滤掉梯度比较小的高斯点，只对梯度较大的点进行密集化。自适应阈值每次密集化操作中旋转梯度最高的一定百分比的点，确保阈值能适应梯度的分布，维持相对稳定的位置关系。</p><ol start="2"><li>Temporal and Multi-view Consistent Diffusion</li></ol><p>Multi-view Consistent Diffusion：<br>整体pipeline采用SDS，通过图像diffusion model优化动态3D高斯。文章主要利用Zero123为一个，Image-to-Image diffusion model，SDS Loss如下所示：<br><img src="/2024/05/30/STAG4D/L_SDS.png" alt="L_SDS"><br>Zero123可以生成场景任意视角图像，但是一次只能生成一张，这在从多个视角生成空间一直图像时很差。Zero123++利用reference attention来建模目标视角和输入视角之间的关系，生成了多视角一致的输出，但是需要固定目标相机位置，文章将Zero123++的多视角一致性输出作为zero123的输入，计算SDS Loss。</p><p>Temporally Consistent Diffusion：<br>文章提出了一个temporal attention模块使得Zero123++具备时间感知。在对第一帧去噪时得到的注意力信息，用于后续去噪过程。进行潜代码去噪时，公式如下，需要计算Q、K、V矩阵：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>e</mi><mi>l</mi><mi>f</mi><mo>−</mo><mi>A</mi><mi>t</mi><mi>t</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><mi>c</mi></msqrt></mfrac><mi>V</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Self-Attn(Q,K,V)=Softmax(\frac{QK^T}{\sqrt{c}}V)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.448331em;vertical-align:-0.9300000000000002em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.30972em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathdefault">c</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9300000000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mclose">)</span></span></span></span></span></p><p>首先从初始帧计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mn>0</mn></msub><mtext>和</mtext><msub><mi>V</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">K_0和V_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，接着对于1…N的每一帧，采用混合当前帧KV和初始帧KV矩阵的形式，如下所示：<br><img src="/2024/05/30/STAG4D/mixing_operation.png" alt="mixing_operation"><br>此外，使用reference attention从输入图像中提取控制信息。在该框架下，每一步的key和value均通过参考图像和噪声图像的特征合并得到。时间和空间的混合attention如下所示：<br><img src="/2024/05/30/STAG4D/temporal_and_spatial.png" alt="temporal_and_spatial"></p><ol start="3"><li>Trainning Objectives<br>主要采用多视角SDS，对应损失函数如下：<br><img src="/2024/05/30/STAG4D/L_MVSDS.png" alt="L_MVSDS"><br>其中i由距离生成图像视点最近的渲染视点决定。此外，文章还计算重建损失和前景mask损，最终损失为</li></ol><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \lmbda at position 14: L=L_{MVSDS}+{\̲l̲m̲b̲d̲a̲}_3L_{rec}+{\lm…">L=L_{MVSDS}+{\lmbda}_3L_{rec}+{\lmbda}_4L_mask</p><p>首先使用L监督固定的帧获得静态标准空间3D高斯，接着使用所有锚点和参考图像训练动态的4D高斯点云模型。</p><ol start="4"><li>文本-4D扩展<br>首先使用2D Di发fusion Model(SDXL)完成文本描述生成图像，接着通过video diffusion model(SVD)为图像添加时间相关性和动作。最后使用上面的pipeline即可完成工作。</li></ol><h2 id="补充">补充</h2><ol><li>Local Condition：Refernce Attention<br>ControlNet中提出了Reference Attention，用于在使用UNet进行去噪时对草靠图像进行额外的操作，将来自参考图像的自注意力的key和value矩阵附加到对应的attention层来改进模型的去噪能力。为确保UNet能够在当前噪声水平下能够关注到相关特征，参考图像也被加入了相同水平的高斯噪声。在不进行finetuen的前提下，可以使得diffusion model生成与参考图像具备相似语义内容和纹理的图像。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GVA</title>
      <link href="/2024/05/29/GVA/"/>
      <url>/2024/05/29/GVA/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>文章主要目的为重建高真实感的人体，并实现皮肤表面和3D高斯的准确对齐。首先文章提出了一个姿势优化技术，通过对齐法线和轮廓图来提高手部和脚部的对齐。第二部分需要解决不平衡聚合和初始化偏差，作者会降低3D高斯化身的质量，具体通过表面指导的重初始化方法，来确保3D高斯点和化身表面的对齐。</p><h2 id="pipeline">pipeline</h2><p>文章整体方法可以分为三个关键部分：第一部分为可驱动的3D高斯化身表示；第二部分是化身重建的姿势优化；第三部分是表面指导的高斯重初始化。<br><img src="/2024/05/29/GVA/pipeline.png" alt="pipeline"></p><ol><li>3D高斯化身表示<br>化身3D表示包含两部分{G, B}，其中G是3D高斯点的集合，其中包含了人体的形状和外观特点，B是一个可理解的骨架模型。<br>利用SMPL-X模型高斯点G在标准空间中进行初始化(T-pose)，其中包括55个关节，22个控制身体姿态，15*2个关节负责左和右手的控制，3个关节控制头部。利用层次结构来实现姿态变化，并根据给定的姿势计算每个关节的姿态变换矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>，对于每个高四点通过以下公式基于最近的4个关节计算姿势变化矩阵A：</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>p</mi></munderover><msub><mi>W</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi>T</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mstyle></mrow><annotation encoding="application/x-tex">A(\theta)=\displaystyle\sum_{p=1}^p W_{p}(\mu)T(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.101726em;vertical-align:-1.403221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6985050000000002em;"><span style="top:-1.8828869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.347113em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.403221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W_p(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span>是高斯点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span></span></span></span>的蒙皮，通过寻找距离SMPL-X最近的皮肤点获得。从标准空间向目标姿势的转变为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>θ</mi></msub><mo>=</mo><msub><mi>A</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><msup><mi>μ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msub><mi>A</mi><mi>t</mi></msub><msub><mi>R</mi><mi>θ</mi></msub><mo>=</mo><msub><mi>A</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">\mu_{\theta}=A_{rot}(\theta)\mu&#x27;+A_t   R_{\theta}=A_{rot}(\theta)R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mrow><mi>r</mi><mi>o</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">A_{rot}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为旋转组件，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">A_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为高斯点变换的旋转组件。R为从旋转四元数q计算出来的高斯点的旋转矩阵，对于衣服等非刚性的局部变换，使用了一个条件控制的残差网络预测偏移量，得到心得高斯位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>μ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>μ</mi><mo>+</mo><mi>M</mi><mi>L</mi><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu&#x27;=\mu+MLP(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>。</p><ol start="2"><li>化身重建的姿势细化<br>这一步是为了从图像中得到准确的姿势估计，能够帮助重建更好的3D高斯化身。再第一个阶段，通过全身人体姿势估计网络作为初始化，得到SMPL-X姿势参数和相机参数，如以下所示：</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>θ</mi><mrow><mi>s</mi><mi>t</mi><mi>a</mi><mi>g</mi><mi>e</mi><mn>1</mn></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">Π</mi><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta^{stage1}, \Pi=E(I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.058548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Π</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></span></p><p>这一阶段在人为侧面时预测出的手和脚部区域通常没有对齐。在第二阶段，通过法线图和轮廓图进一步优化姿势，提高SMPL-X和对应图像之间的一致性。其中发现图可以有效指引手部和脚部姿势的对齐；轮廓图保证手和脚在图像中观测到的区域一致。其中法线图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">S^{pred}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>通过ICON估计，轮廓图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">S^{pred}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>通过Segment Anything Model进行估计，最终损失函数如下所示：<br><img src="/2024/05/29/GVA/L_pose.png" alt="L_pose"><br>其中最后一部分为正则化，让优化后的姿势与第一阶段估计的姿势保持贴近。</p><ol start="3"><li><p>表面指导的高斯重初始化<br>这一部分主要解决不均衡聚合和初始化偏差的问题，3DGS的分割和聚合操作将高斯点推向高频纹理区域，导致局部的聚合。同时，3D高斯点对初始化非常敏感，这会进一步加剧虚拟人物模型中的伪影。此外3D高斯在建模长头发或者穿较松衣服人体的姿势时难以完成。因此采用额外的约束，使得高斯分布贴近任务的表面。包括Meshing、Resampling和Re-Gaussian，其中Meshing为3D高斯点提供表面集合先验作为约束；Resampling负责让3D高斯分布均匀，Re-Gaussian防止陷入局部最小状态。<br>Meshing：使用了球壳表面重建的方法获取人体表面，由人体最外层的高斯点表示<br>Resampling：在重建的化身网格上应用拉普拉斯平滑得到一个平滑的表面先验，对网格点进行基于曲率的均匀采样得到心的高斯点。<br>Re-Gaussian：重新采样点继承其K-近邻个点的占用值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">η</span></span></span></span>和球谐稀疏f，旋转R和缩放s也进行重新初始化。</p></li><li><p>可微渲染损失函数<br>如下所示，主要包括重建损失、感知孙志和残差正则化损失<br><img src="/2024/05/29/GVA/L_render.png" alt="L_render"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ram-Avatar</title>
      <link href="/2024/05/29/Ram-Avatar/"/>
      <url>/2024/05/29/Ram-Avatar/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>本篇文章目标为实现从单目视频输入中生成实时、照片级真实、可控制的全身数字人。RAM-Avatar利用两个两个统计模板分别建模面部表情和手势的变化，对于身体采用另一套身体模板并进入了一个稀疏计算的双向注意力模块，来完成对身体和四肢的高保真度渲染。文章设计了StyleUNet，其具备一个时间感知鉴别器能达到实时真实渲染。此外文章还迎入了一个动作分布对齐模块，用来弥补模型在训练和推理时的分布差异，生成训练分布之外的姿势。</p><h2 id="pipeline">pipeline</h2><p>文章整体方法可以分为三个阶段，第一阶段利用双向注意力模块来增强穿衣服人体的细节；第二阶段运动分布对齐模块消除训练和测试阶段运动分布的差异提高鲁棒性；脸和手部建模实现对整个身体的控制。<br><img src="/2024/05/29/Ram-Avatar/pipeline.png" alt="pipeline"></p><ol><li><p>Achieving Full body Control<br>使用人体模板投影后的神经纹理会忽略屌身体细粒度的部分如人脸表情和手势参数，为了解决这个问题，利用FaceVerse获取相关人脸参数，作者采用卷积神经忘了来从合成的人脸网格中提取特征。为了建模复杂的手势通过建立手部关键点之间的联系得到手部特征图。将脸部特征、手部特征和身体神经纹理特征相结合成为全身的特征图。<br>接着使用Style Unet中生成器将全身特征图转换为RGB图像，并于相邻GT送入鉴别器中，使得鉴别器同时判断图像的真实性和序列的时间一致性。</p></li><li><p>Dual Attention Module<br>双向注意力模块包含空间和时间两部分，能够弥补身体模板的错位并增强身体特征图的时间一致性。将网格的顶点沿着发现向外拉并渲染成扩展的身体特征图，并通过对比原本身体特征图和扩展的身体特征图的距离和相似度来优化原本的身体特征图，优化过程被设计为利用网络识别哪些地方离模板近，哪些离得比较远。具体流程如下图所示：<br><img src="/2024/05/29/Ram-Avatar/Criss_Cross_Attention.png" alt="Criss_Cross_Attention"><br>具体对原本和扩展的身体特征图使用了两层1*1卷积得到两个特征图Q和K，对于K中的每个位置u，找到其在同行或同列的向量几何<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ω</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">\Omega_{u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,从而得到相似度</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow></msub><mo>=</mo><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>u</mi><mo stretchy="false">)</mo><msub><mi>Q</mi><mi>u</mi></msub><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i, u}=d(i, u)Q_{u}\Omega_{i, u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow></msub><mo>∈</mo><msup><mi>R</mi><msub><mi>C</mi><mn>4</mn></msub></msup></mrow><annotation encoding="application/x-tex">\Omega_{i, u}\in{R^{C_4}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ω</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">\Omega_{u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的第i个元素，最终得到矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∈</mo><msup><mi>R</mi><mrow><mo stretchy="false">(</mo><mi>H</mi><mo>+</mo><mi>W</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">A\in{R^{(H+W-1)*H*W}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span></span>，d(i, u)代表距离权重函数。<br>接着额外使用一层1*1卷积得到V用于聚合，与上面的内容一致，得到V和其中对应的几何<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span>，空间部分的输出计算如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>F</mi><mi>u</mi><mrow><mi>s</mi><mi>p</mi><msub><mi>a</mi><mn>1</mn></msub></mrow></msubsup><mo>=</mo><mi>α</mi><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>H</mi><mo>+</mo><mi>W</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>A</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msub><mi mathvariant="normal">Φ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow></msub></mstyle></mrow><annotation encoding="application/x-tex">F_u^{spa_1}=\alpha \displaystyle\sum_{i=1}^{H+W-1} A&#x27;_{i,u}\Phi_{i,u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1060050000000006em;vertical-align:-1.277669em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>在训练过程中会学习，<span class="katex-error" title="ParseError: KaTeX parse error: Expected group after &#039;^&#039; at position 2: A^̲&#039;">A^&#039;</span>表示A的softmax版本，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>u</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Phi_{i,u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">\Phi_{u}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的第i个元素。以上的操作会进行两遍，同时次啊用跳跃连接的操作增强稳定性，最终生成空间部分的特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F^{spa}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span></span></span></span></span>。<br>对于时间一致性，采用了与生成Q类似的方法，只不过是从前一帧，得到时间特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mrow><mi>t</mi><mi>e</mi><mi>r</mi><mi>m</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F^{term}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span></span>，连个特征分别经过元素感知的加和操作用于特征混合并获得聚合的人体特征图。通过上面这些操作完成了对像素级特征的则那够呛，其具备了丰富的上下文信息。</p></li><li><p>运动分布对齐<br>这一步要做的是调整驱动姿势的分布匹配训练姿势域，同时维持原有的语音信息。具体来说学习在大数据集上训练了一个VAE使其内部包含人体运动意义。为了将潜在姿势表示转换为特定的分布，实现了一个在姿势化身数据上训练额外条件解码器，其新业态当前和前一个姿势作为输入。在训练过程中编码器固定，额外的解码器维持鲁棒性。通过利用鲁棒性的姿势编码器和特定分布的姿势解码器来消除训练和测试的姿势差异。鲁棒的姿势编码器用于提取人体动作的内在语音，同时特定分布的姿势解码器将语义转化为连续的人体动作序列。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GaussianAvatar</title>
      <link href="/2024/05/21/GaussianAvatar/"/>
      <url>/2024/05/21/GaussianAvatar/</url>
      
        <content type="html"><![CDATA[<h2 id="pipeline">pipeline</h2><p>文章给定SMPL或SMPL-X后，在其表面上进行采样，并记录其在UV位置图上的位置，得到的位置通过pose encoder得到姿态特征。接着一个可优化的特征用于捕捉人体的粗糙外观，其余姿态特征按像素对齐。两个对齐的特征会作为高斯参数解码器的输入，预测每个点的偏移量、颜色和缩放尺度。这些预测结果余固定的旋转q和占用值共同构成标准空间下的可动画3D高斯。<br><img src="/2024/05/21/GaussianAvatar/pipeline.jpg" alt="pipeline"></p><ol><li>Animatable 3D Gaussians</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>β</mi><mo separator="true">,</mo><mi>θ</mi><mo separator="true">,</mo><mi>D</mi><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>t</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>J</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>θ</mi><mo separator="true">,</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(\beta, \theta, D, P)=Splatting(W(D, J(\beta), \theta, \Omega), P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Ω</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></span></p><p>其中W是一个标准LBS函数，用于恢复3D高斯分布，D=T(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)+dT代表标准空间中3D高斯的位置，在模板表面T(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)添加矫正的点偏移dT，P表示3D高斯除位置以外的参数。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>是形状和姿势参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>可以输出3D关节位置。经SMPL或SMPL-X顶点上的蒙皮权重w推广到最近的3D高斯分布。通过这些表示，可以将这些标准3D高斯转换到运动空间，可以用于从各个视角的渲染。</p><ol start="2"><li>Dynamic 3D Gaussian Property Estimation<br>点偏移dT和P决定人体外观，动态人体外观通过估计这些动态属性达到。为了建模多种姿态，通过一个动态外观网络，其包含一个可优化的特征张量能够预测3D高斯中依赖于姿势的属性，这个网络能够捕获粗糙的全局外观。该网络学习从人体姿态到动态属性的映射，其在有限的训练姿势上进行过拟合。为了将全局外观整合到特征张量中，使用了一个两阶段的训练策略。<br>动态外观网络被设计用来学习从表示底层人体形状的二维流形到三维高斯分布的动态特性的映射，如下</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>ϕ</mi></msub><mo>:</mo><msup><mi>S</mi><mn>2</mn></msup><mo lspace="0em" rspace="0em">∈</mo><msup><mi>R</mi><mn>3</mn></msup><mo lspace="0em" rspace="0em">⇒</mo><msup><mi>R</mi><mn>7</mn></msup></mrow><annotation encoding="application/x-tex">f_{\phi}:S^2{\in}R^3{\Rightarrow}R^7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ϕ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9032079999999999em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord"><span class="mrel">⇒</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中2D人体流形<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">S^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>为UV位置图，每个像素存储着位置(x, y, z)其表示摆好姿势人体表面上的一点。最后的预测包括每个点的偏移量，颜色和缩放因子。这里并没有预测其它的高斯属性，因为3D高斯具备各项异性，其更倾向于从最常见的视角中拟合出不准确的3D形状，从其它视角看时会导致较差的效果。作者通过将各个维度维持在均匀的大小，以保证3D高斯的各向同性。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>s</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>表示3D高斯缩放因子，旋转q设置为[1, 0, 0, 0]。在原本的3D高斯中，网络预测占用值，并倾向于将边界部分预测为0，从而矫正人体形状。作者通过将占用场设置为1保证所有3D高斯可见，使得网络能够预测3D高斯的准确位置。<br>动态外观网络包括两个部分：一个pose编码器和一个高斯参数解码器。pose编码器将摆好姿势的人体点的UV位置图作为输入，生成与pose相关的特征张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo lspace="0em" rspace="0em">∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">O{\in}R^{H*W*C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.880431em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>。接着集成像素对齐的可优化特征张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo lspace="0em" rspace="0em">∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">F{\in}R^{H*W*C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.880431em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，将他们共同送入到高斯参数解码器中生成最终的预测。接着，为标准的3D高斯添加预测的偏移量，将预测的属性与3D高斯联系起来。有了这些估计好的姿势，可以重新确定标准3D高斯分布的姿势，将其转移到运动空间，方便进行渲染。</p><ol start="3"><li><p>Joint Motion and Appearance Optimization<br>由于从单目视频中估计的人体姿态和转换并不准确，运动空间重新摆好姿势的3D高斯也并不准确，可能在渲染时产生错误的结果，为了解决这个问题，采用了联合优化人体运动和外观的策略，通过图像loss更新身体姿态和转换参数。通过修改姿势参数，即可在运动条件下可微渲染上面提出的可动画3D高斯，并采用可逆的蒙皮，能够同时对运动和外观进行优化。</p></li><li><p>Training Strategy<br>使用了两个阶段不同损失函数优化处理。在第一阶段，将顺序的外观与可优化的特征张量混合并进行运动优化，以得到动态外观网络的准确姿势。在这一阶段，通过去掉pose编码器，即可以实现在不包含任何姿态相关的信息的前提下优化框架。并使用如下损失函数训练网络：<br><img src="/2024/05/21/GaussianAvatar/stage1_loss.jpg" alt="stage1_loss"><br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>r</mi><mi>g</mi><mi>b</mi></mrow></msub><mtext>，</mtext><msub><mi>L</mi><mrow><mi>s</mi><mi>s</mi><mi>i</mi><mi>m</mi></mrow></msub><mtext>和</mtext><msub><mi>L</mi><mrow><mi>p</mi><mi>i</mi><mi>p</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{rgb}， L_{ssim}和L_{pips}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为L1损失，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>f</mi></msub><mo separator="true">,</mo><msub><mi>L</mi><mrow><mi>o</mi><mi>f</mi><mi>f</mi><mi>s</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>L</mi><mrow><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{f}, L_{offset}, L_{scales}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为特征图，预测的偏移和尺度的L2损失图。<br>第一阶段结束后，会得到更加准确的人体运动和可优化的特征张量F。F捕捉了人体的粗糙外观。在第二阶段，将姿态编码器编码得到的姿态特征与训练好的特征F集成。将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">L_{f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>替换为L2损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">L_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，负责正则化pose空间。通过对姿势依赖的特征，可以消除训练姿势的偏移，从而可以泛化到没有见过的视角与姿势。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GSM</title>
      <link href="/2024/05/20/GSM/"/>
      <url>/2024/05/20/GSM/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>原本借助3D GAN的生成框架速度较慢，一方面碍于GAN的训练速度，另一方面体渲染本身很慢，并且需要多视角的2D数据。文章提出Gaussian Shell Maps(GSMs)将SOTA的生成式框架与高斯渲染框架相结合，利用多层shell-based架构来实现链接。生成器生成的堆叠特征被映射到shells，其描述了标准姿势下人体模板表面膨胀和非膨胀的版本。作者没有直接渲染shells，而是利用shells的特征被编码到纹理特征中的特性，从其中采样3D高斯。所构建的框架不需要视图一致性的上采样器，并且生产出512*512分辨率的图像。</p><h2 id="先验">先验</h2><ol><li><p>3D高斯</p></li><li><p>Shell Maps<br>在计算机图形学中用来描述贴近模型表面的细节。Shell maps使用3D纹理图来存储细粒度的特征，本质上是UV图延伸，能够形成shell-like体积中每个点与3D纹理贴图的一一映射，有助于在纹理空间进行有效的建模和渲染。shell体积是在基础网格的基础上， 在保证拓扑结构和避免自交的前提下，沿着法线方向做偏差。体积被划分成一系列四面体，连接着基础网格和偏移网格顶点。通过查询四面体和它对应的重心坐标，就能确定shell(几何表面)和纹理空间的映射。具体如下所示：</p></li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>T</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_t=\phi(T_t, B(x, T))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>其中T和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应shell和纹理空间的四面体，B(x, T)是T中x的重心坐标，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span>是重心坐标插值函数。</p><h2 id="pipeline">pipeline</h2><p>核心为从SMPL中导出的shells固定3D高斯的位置，这些shells由于与SMPL表面连接，包含了没穿衣服的模板的表面细节。文章只在纹理空间学习相关的高斯参数，这样借助生成式的主干生成shell，建立3D高斯模型后可以通过SMPL参数化模型进行动画，整体pipeline如下：<br><img src="/2024/05/20/GSM/pipeline.jpg" alt="pipeline"><br>shells来源于SMPL表面，可以建模更加复杂和多样的几何，借助CNN生成式架构生成shells后，并在纹理空间学习高斯，通过对shell变形进行插值即可实现动画。整个框架使用单视角的2D图像进行监督，并额外使用局部就鉴别器进行约束，包括面部、手和脚。</p><p>Representaion：<br>shell maps为纹理空间的平面结构，与基于CNN的生成式架构适配。拉普拉斯平滑是一种平滑网格或曲面的技术，将每个顶点位置调整为相邻顶点位置的平均值， 平滑因子为负值时起到膨胀的效果，为正时起到收缩的效果。通过这种方法可以得到T-pose网格的边界网格层，即shell volume。接着使用N层网格层来表示shell volume，即shells，在收缩和膨胀的边界中间均匀的插入顶点形成多层shell。同样，对于3D纹理空间采用类似的离散化策略，使用过N个2D纹理图存储神经特征，通过UV映射关系可以为每个shell提供对应的纹理参考。<br>通过shell maps来生成除位置外的高斯参数，位置参数在每次迭代中被采样和锚定。最终生成特征体积<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>T</mi><mrow><mi>N</mi><mo>∗</mo><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mn>11</mn></mrow></msup></mrow><annotation encoding="application/x-tex">T^{N*H*W*11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">∗</span><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，11包括3维颜色，1维占用值，3维缩放和4维旋转。<br>在shell volume中，根据三角区域均匀采样固定数量的高斯分布。采样完成后，通过重心坐标可以将高斯锚定在shells上，具体公式参考上面的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">x_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的计算，T代表三角形。<br>通过上面的方法，高斯函数将离散的shells特征转化为了3D空间连续信号，即使并不是采样点也能检索到对应的占用场和颜色值。</p><p>Deformation：<br>这一步根据SMPL网格参数对高斯的位置和方向进行更新。由于高斯的位置与重心坐标有关，通过与其相关联的顶点可以查询到新的位置与方向。例如给定三角面片T内的高斯重心坐标B(x, T)，以及变形后的新位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>n</mi></msub><mi>e</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">T_new</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>和顶点上的旋转四元数P，可以计算高斯新的位置和方向。<br><img src="/2024/05/20/GSM/%E6%96%B0%E4%BD%8D%E7%BD%AE.jpg" alt="新位置"><br>其中P为关节LBS的结果。</p><p>GAN trainning：<br>使用不带camera和pose的StyleGAN2作为生成器，并对c，o，q，s分别使用不同的MLPs。对颜色c使用shifted sigmod；对于占用值o使用sigmoid，其值被限制到(0, 1)；对于旋转q，对MLP的输出进行正则化；对于缩放s，使用阶段的指数激活函数来限制高斯的的大小，有助于模型的收敛。<br>鉴别器由于不包含上采样器，其输入为与alpha通道连接的RGB图像，这些图像通过高斯光栅化进行渲染，对于假样本高斯颜色值被设为1，真实样本用一个现成的分割网络进行预先计算。使用alpha通道能够防止白色的背景混入到外观中，在动画时会产生伪影。<br>原本的鉴别器并不能很好的对人脸、手和脚进行监督，使用了专门的人脸鉴别器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>f</mi><mi>a</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{face}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，手和脸的鉴别器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>f</mi><mi>e</mi><mi>e</mi><mi>t</mi><mi mathvariant="normal">/</mi><mi>h</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{feet/hands}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>，以及原本的主要鉴别器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{main}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这些鉴别器有相同的架构，<br>使用了一个尺度缩放函数，如下所示，有效的解决了发散和模式崩塌问题。<br><img src="/2024/05/20/GSM/L_scale.jpg" alt="L_scale"><br>M是shell maps上UV映射区域的二进制掩膜，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>参考缩放，其由所有高斯平均的最近距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>决定。</p><h2 id="实验">实验</h2><p>DeepFashion和SHHQ，并使用SMPLify-X来获得对应的SMPL参数和相机pose。<br>Metrics：<br>FID、PCK</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>dreamGaussian4D</title>
      <link href="/2024/05/16/dreamGaussian4D/"/>
      <url>/2024/05/16/dreamGaussian4D/</url>
      
        <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2><ol><li>使用可形变的高斯溅射表示4D内容生成，其显式的稀疏转换建模显著降低了优化时间</li><li>框架为image-to-4D，能够支持更多的可控和多样性的3D动作</li><li>提出了一个video-to-video的纹理细化策略，进一步提高导出网格的动画质量</li></ol><h2 id="pipeline">pipeline</h2><p>主要包含三部分内容，第一部分初始化阶段，设计一个DreamGaussian的变体，从输入图像中创建3D高斯。第二阶段动态生成，从输入图像中生成驱动视频基于3D高斯优化一个依赖时间的变形场。最后阶段为一个网格细化将4D高斯转化为可动画的网格序列，并使用一个video-to-video的pipeline进行纹理贴图的一致性细化。</p><p><img src="/2024/05/16/dreamGaussian4D/pipeline.jpg" alt="pipeline"></p><ol><li><p>DreamGaussianHD for Static Generation<br>原本的DreamGaussian对于静态模型没有看到的区域会产生显著的模糊，主要从2个方面进行改善。<br>首先是进行多视角优化，DreamGaussian再每次对SDS优化迭代时随机采样一个视角，导致了不平衡的优化与收敛，在这里采样了16个视角来生成3D高斯未见区域的高质量几何。<br>其次，DreamGaussian从黑或白中采样背景，黑色背景会为优化过程引入额外的噪声，导致伪影的出现，因此将背景固定为白色。</p></li><li><p>Gaussian Derformation for Dynamic Generation<br>使用能够描述输入图像的任意视频来显示的监督SDS过程，视频可以收集(video-to-4D)或者来自image-to-video模型(Stable Diffusion Video)。文章中基于Stable Diffusion Video，通过不同的随机种子生成高质量的参考视频，用于iamge-to-4D的生成任务。</p></li></ol><p>static-to-dynamic initialization：<br>设计了一个变形网络预测每个时间点高斯位置、旋转和缩放的变化</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Expected group after &#039;_&#039; at position 2: S_̲&#039;=\phi(S, \tau)…">S_&#039;=\phi(S, \tau)</p><p>其中S是3D高斯的稀疏表示，包括位置、旋转和缩放，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span>是时间。训练时，作者初始化变形网络模型来预测零变形，即将最后的预测头的权重和偏差设置为0。</p><p>deformation field optimization：<br>再优化变形场的时候，采用与参考图片相同的视角，通过得到最小化参考图像视点下渲染出的图片与image-to-video生成的图片来优化变形场。同时为了将动作推广到整个3D模型，利用Zero-1-to-3-XL预测不可见部分的变形。由于静态3D GS的颜色值和占用场是固定的，保证了时间一致性。<br>训练过程中，每一次采样多张图像，loss如下，其中o是随机的视点。由于静态模型初始化，可以从较低的噪声水平进行SDS。</p><ol start="3"><li>video-to-video texture refinement<br>原本的DreamGaussian中的网格提取方法帧间缺少时间连续性，在单独进行纹理优化时会导致伪影。作者首先合成一个相机轨迹，摄像机以恒定速度沿着0°高度从随机选择的水平角度移动。接着渲染出一个视频，并添加0.7等级的噪声，并使用一个image-to-video扩散模型将噪声视频转化为无噪声视频。最后通过渲染视频与image-to-video扩散模型去噪结果的MSE Loss来优化纹理。</li></ol><h2 id="补充dreamgaussian">补充DreamGaussian</h2><h3 id="abstract">Abstract</h3><p>基于score distillation sampling(SDS)进行3D内容生成。并通过3D高斯来提高生成的效率。文章设计了一个3D高斯生成模型以及对应的网格提取和UV空间的纹理优化，3D高斯的剪辑米计划收敛能够加速3D生成的任务，为了进一步优化纹理细节，设计了一个可以将3D高斯转化为纹理网格的算法并通过一个fine-tuning阶段进行优化。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HumanGaussian</title>
      <link href="/2024/04/28/HumanGaussian/"/>
      <url>/2024/04/28/HumanGaussian/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>现有方法通过score distillation sampling(SDS)的方式（详情见DreamDiffusion）优化例如网格、神经场等3D表示，会导致细节不足和训练时间过长。本文将提出一个生成细粒度几何和真实外观的3D人。本文提出了一个结构感知的SDS，同时优化人的几何和外观。其从颜色和深度空间中得到的多模态score function能够，通过高斯密集化和修剪过程来提炼信息。此外，通过将SDS解耦成一个噪声更大的生成分数和一个更加干净的分类分数，得到退火负提示来解决过饱和的问题。仅在修剪阶段基于高斯大小进一步消除浮动伪影。</p><h2 id="pipeline">pipeline</h2><ol><li>先验知识<br>1.1 SMPL-X包含10475个顶点和54个关键点<br>1.2 Score Distillation Sampling(SDS)<br>这是一种提取二维预训练先验用于优化3D表示的方法，假设将某个场景参数化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>并且使用可谓渲染函数g(·)得到图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=g(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>。通过将样本推向真实数据分布的密集区域，跨越所有噪声水平，使得每个摄像机视角的渲染图像更像是从指导扩散模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span>导出的可信样本。DreamDiffusion采用Imagen作为分数评估函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ϵ</mi><mi>ϕ</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">;</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon_{\phi}(x_t;y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ϕ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，其中y为文本嵌入结果，SDS通过梯度下降的方式来优化3D场景，如下所示：<br><img src="/2024/04/28/HumanGaussian/L_SDS.jpg" alt="L_SDS"><br>1.3 3D高斯溅射<br>与隐式的Nerf不一致，通过一组各向异性的高斯分布表示底层场景，这些高斯分布被参数化为位置中心<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mi>m</mi><mi>u</mi></mrow><annotation encoding="application/x-tex">/mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span></span></span></span>，协方差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mi>S</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">/Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span></span></span></span>，颜色c和占用值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>，通过讲3D高斯投影到相机图片平面，2D高斯可以进行基于点的渲染。具体公式如下所示：<br><img src="/2024/04/28/HumanGaussian/3D%E9%AB%98%E6%96%AF.jpg" alt="3D高斯"></li></ol><p>其中p代表被查询点的位置，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mu_i,\Sigma_i,c_i,\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别代表第i个高斯的位置、协方差、占用值和密度，G函数代表第i个3D高斯的值，最终得到每个点的颜色值。</p><ol start="2"><li><p>Structure-Aware SDS<br>最简单的方法使用3D高斯代替原本的mesh或隐式神经场来完成文本驱动3D人生成的任务。然而，1）原本的3D高斯训练过程依赖好的中心初始化，需要进行良好的初始化设置来生成高真实感的人类。2）3DGS除了学习人体的几何外观，还需要补充结构化知识例如文本-深度/法线来完成文本驱动图像的任务，需要学习结构和纹理的联合分布。3）常用的SDS仅从RGB空间中获取，通过这种稀疏的梯度难以优化基于点的3D高斯渲染。需要对3D高斯添加显式结构化的监督。<br>1）使用SMPL-X先验进行高斯初始化<br>文章使用SMPL-X表面的均匀采样点作为3D高斯初始化。使用100k个3D高斯进行初始化，采用单位缩放、平均颜色和无旋转，这能比原本的SMPL-X定义的顶点更加密集来捕捉局部细节。作者对3D高斯进行了缩放和变换，让其更加接近人的大小，并且位于3D坐标的中心。进一步提取2D骨架作为结构化条件(SMP-X关节映射为COCO格式的人体关键点)。当制作骨架图时会去掉遮挡住的点来进行更好的可视化。<br>2）学习纹理-结构联合分布<br>在HyperDiffusion中使用结构化的专家分至分别对图像和深度进行去噪，为了权衡空间对齐与分布学习，作者重复了diffusion UNet第一个DownBlock和最后一个UpBlock的conv_in以及conv_out层来解决对每个目标去噪的问题。同时讲姿态图p作为条件通过通道感知的连接来进行灵活的骨架控制。优化目标如下：<br><img src="/2024/04/28/HumanGaussian/%E4%BC%98%E5%8C%96%E7%9B%AE%E6%A0%87.jpg" alt="优化目标"><br>其中x和d代表图像-深度对，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>v</mi><mi>t</mi><mi>d</mi></msubsup><mtext>和</mtext><msubsup><mi>v</mi><mi>t</mi><mi>x</mi></msubsup></mrow><annotation encoding="application/x-tex">v_t^d和v_t^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>分别代表t时刻v预测的学习目标(RGB和深度)。这样diffusion模型可以建模外观(纹理)和前后关系地结构，可以用于SDS中进行3DGS学习。<br>3）两个SBS分支作为优化指导<br>将diffusion model进行扩展生成空间对齐的图像RGB和深度，可以用来指导从结构和纹理方面的3DGS优化过程。利用基于点的阿尔法混合，将N个排序好的高斯实例叠加到像素上累加计算像素的深度值。如下所示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是当前相机视角下的第i个高斯中心<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mu_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的投影深度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(p, \mu_i, \Sigma_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，查询点p的第i个高斯的值。将渲染出的深度图d归一化到[0, 1]数据范围。与图像渲染结果x相结合，使用双分支的SDS来优化3DGS。<br><img src="/2024/04/28/HumanGaussian/dual_L_SDS.jpg" alt="dual_L_SDS"><br>通过这种正则化能偶减少几何变形，有利于使用系数梯度信息优化3DGS/</p></li><li><p>退火负提示引导<br>使用无分类器指导分解SDS。在DreamFusion中使用一个大型无分类器尺度来更新3D场景优化中的得分匹配差异项，如下所示：<br><img src="/2024/04/28/HumanGaussian/score_matching_difference.jpg" alt="score_matching_difference"><br>按照这种方式将分数解耦成两部分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><msub><mi>ϵ</mi><mi>g</mi></msub><mo>+</mo><mi>τ</mi><mo>∗</mo><msub><mi>ϵ</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">\epsilon=\epsilon_g+\tau*\epsilon_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，前一部分是生成分数，将图像推向更加真实的流形，后一部分是分类器分数通过一个隐式分类器对齐样本。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HOLODIFFUSION</title>
      <link href="/2024/04/28/HOLODIFFUSION/"/>
      <url>/2024/04/28/HOLODIFFUSION/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GPS-Gaussian</title>
      <link href="/2024/04/23/GPS-Gaussian/"/>
      <url>/2024/04/23/GPS-Gaussian/</url>
      
        <content type="html"><![CDATA[<h2 id="文章贡献">文章贡献</h2><ol><li>引入了可以繁华的3D高斯方法，通过使用在2D源图像上定义的像素感知的高斯参数图，在前向过程中生成3D高斯。</li><li>整个框架完全可微，包括一个深度估计模块和一个高斯参数回归模块。中间预测的深度图能够连接两个组件，让他们一起进行联合训练。</li><li>提出了实时NVS(新颖视角合成)通过直接回归高斯参数图，实现2K图像渲染</li></ol><h2 id="先验-3d高斯">先验——3D高斯</h2><p>该模型显示地建模静态3D场景，以点作为基元，每个点被参数化为一个可以放缩地高斯，包括协方差矩阵和均值，如下所示：<br><img src="/2024/04/23/GPS-Gaussian/eq_1.jpg" alt="eq_1"><br>为了能够进行梯度下降，协方差矩阵被分解为缩放矩阵S和旋转矩阵R</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi><mo>=</mo><mi>R</mi><mi>S</mi><msup><mi>S</mi><mi>T</mi></msup><msup><mi>R</mi><mi>T</mi></msup><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Sigma=RSS^TR^T           (2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><p>通过视角转换矩阵W和投影百年换地仿射近似地雅可比矩阵J，2D空间中的协方差矩阵可以被计算为<br><img src="/2024/04/23/GPS-Gaussian/eq_3.jpg" alt="eq_3"><br>接着使用基于点地alpha混合渲染得到颜色，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时每个点的颜色，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是密度，其通过将2D高斯(协方差如公式3)学习到的没点不透明度相乘后推断而出。颜色通过球谐系数定义。总之3D高斯将每个点定义为五项属性。1）每个点的3D位置X，2）由SH定义的颜色c，3）一个四元数定义的旋转r，4）放缩因子s，5）占用值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span></p><h2 id="方法">方法</h2><p>给定一个新颖的目标视角后，选取两个相邻视角并通过共享的图像编码器提取源图像特征。接着通过双目深度估计其预测通过图像特征预测深度图。源图像中的深度和RGB值决定每个高四点的3D位置和颜色，其它的参数通过像素感知的方式预测。将深度图与RGB图像结合，这些参数图形成2D图像平面的高斯表示，并进一步转化到3D空间中。从两个视角转化后的3D高斯进行聚合并通过可微的方式渲染到目标视角中。</p><ol><li><p>视角选取和深度估计<br>对于一个静态场景的N张图像和对应相机视角，相机视角-屏幕中心得到对应的视角。接着用目标视角-屏幕中心的到目标视角，将N张图像的视角分别与目标视角做点乘，得到最近的两个视角对。对应的图像对输入由残差模块和降采样模块组成双目图像编码器提取密集图像特征。公式如下所示：<br><img src="/2024/04/23/GPS-Gaussian/%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96.jpg" alt="特征提取"><br>深度图是连接2D图像平面和3D高斯表示的桥梁，对于视图中的每一个像素，使用视差估计来找到其在另一个视图中的坐标，由于其只会在水平线上发生如果变动，通过相机参数就可以得到对应的深度图。将深度估计得到的两个结果通过矩阵乘法得到对应3D相关体，如下所示：<br><img src="/2024/04/23/GPS-Gaussian/3D%E7%9B%B8%E5%85%B3%E4%BD%93.jpg" alt="3D相关体"><br>基于3D相关体C，通过T步迭代查找，最终的迭代结果通过凸上采样的方式得到图像分辨率的深度图，如下所示：<br><img src="/2024/04/23/GPS-Gaussian/%E6%B7%B1%E5%BA%A6%E4%BC%B0%E8%AE%A1.jpg" alt="深度估计"><br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">K_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">K_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为相机参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">D_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">D_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为最终的图像分辨率的深度图。</p></li><li><p>Pixel-wise Gaussion Parameters Prediction</p></li></ol><p>2D高斯图如下定义：<br><img src="/2024/04/23/GPS-Gaussian/2D_Gaussian_maps.jpg" alt="2D_Gaussian_maps"></p><p>其中x是图像屏幕的前景像素坐标，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>r</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>M</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">M_p,M_c,M_r,M_s,M_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别代表2D高斯图的位置、颜色、旋转、缩放和占用场值。以深度图和3D坐标x作为输入，通过投影矩阵P可以得到位置坐标。<br><img src="/2024/04/23/GPS-Gaussian/3D%E9%AB%98%E6%96%AF%E4%BD%8D%E7%BD%AE.jpg" alt="3D高斯位置"><br>由于数据场景主要包括漫反射，直接使用原始的RGB图像预测颜色图，而不是预测球谐系数，如下所示：<br><img src="/2024/04/23/GPS-Gaussian/3D%E9%AB%98%E6%96%AF%E9%A2%9C%E8%89%B2.jpg" alt="3D高斯颜色"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ECON</title>
      <link href="/2024/04/23/ECON/"/>
      <url>/2024/04/23/ECON/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>IF（隐式函数）在处理不常见的姿势或服装时，这些方法可能会产生不理想的结果，比如身体部分分离或形状变形。显示模型限制了几何恢复(比如穿着宽松裙子等)。ECON整体分为三步，先为一个穿衣服的人推断一个详细的2D法线图；第二部恢复2.5D的前后表面(d-BiNI)，这些表面准确但不完整，需要利用SMPL-X网格将这些表面对齐；第三步使用inpaint技术对d-BiNI表面之间缺少的几何进行填补。</p><h2 id="pipeline">pipeline</h2><p>输入为RGB图像，ECON从图像中估计前后法线图，之后转化为前后的部分表面，最后通过IF-Nets+来填补缺失的几何，整体的pipeline如下：<br><img src="/2024/04/23/ECON/pipeline.jpg" alt="pipeline"></p><ol><li>Detailed normal map prediction</li></ol><p>整体借助ICON框架，可以估计详细的正面法线图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msubsup><mi>N</mi><mi>F</mi><mi>c</mi></msubsup><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{N_F^c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2403009999999999em;vertical-align:-0.29353099999999993em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6461920000000001em;"><span style="top:-2.4064690000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29353099999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29353099999999993em;"><span></span></span></span></span></span></span></span></span>，同样为ICON的背后法线预测器添加了MRF loss，从而生成详细的背面法线图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>N</mi><mo>^</mo></mover><mi>N</mi><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{N}_N^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2221009999999999em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.424669em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>。ICON的详细法线估计依赖于SMPLX模型渲染的法线图，因此首先估计(PIXIE)图像中的SMPLX模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">M^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>，并通过损失函数进行约束使得估计的身体与衣服轮廓优化对齐，包括<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>N</mi><mi mathvariant="normal">_</mi><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{N\_diff}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05033em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span></span></span></span>（法线图损失）和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>S</mi><mi mathvariant="normal">_</mi><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{S\_diff}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05033em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span></span></span></span>（轮廓损失）以及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{J\_diff}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.05033em;vertical-align:-0.367em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.09618em;">J</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.367em;"><span></span></span></span></span></span></span></span></span></span>（2D关键点损失）。</p><p><img src="/2024/04/23/ECON/loss.jpg" alt="loss"></p><ol start="2"><li>Front and back surface</li></ol><p>接着生成2.5D表面，其需要满足1）与预测衣服法线图对齐，2）低频的表面连续，与SMPL-X相对齐，3）前后轮廓的深度相近。文章使用变分法线积分法建模深度-法线之间的关系，具体使用d-BiNI方法进行全身mesh的重建，其需要借助粗糙的先验、深度图和轮廓一致性完成这个工作。如下所示，其从预测的详细法线图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>N</mi><mo>^</mo></mover><mo lspace="0em" rspace="0em">∗</mo><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{N}_{*}^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1937699999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>和SMPL-X网格<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">M^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>渲染得到的深度图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Z</mi><mo lspace="0em" rspace="0em">∗</mo><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">Z_{*}^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>预测前后详细的深度图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>Z</mi><mo>^</mo></mover><mo lspace="0em" rspace="0em">∗</mo><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{Z}_{*}^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1937699999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>。<br><img src="/2024/04/23/ECON/d_BiNI.jpg" alt="d_BiNI"><br>使用如下五项loss函数来生成更好的结果，如下所示，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">L_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为BiNI损失，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">L_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为用于前后深度表面的深度先验，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">L_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为前后轮廓一致性项。<br><img src="/2024/04/23/ECON/five_loss.jpg" alt="five_loss"><br>此外，作者添加了两个约束，第一个利用从SMPL-X身体网格渲染出来的粗糙深度先验<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>Z</mi><mi>i</mi><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">Z_i^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>与d-BiNI的输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>Z</mi><mo>^</mo></mover><mi>i</mi><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">\hat{Z}_i^c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.205434em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>做约束，其中i是前面或后面的一个点。如下所示，该损失函数能够让表面和SMPL-X更加一致。<br><img src="/2024/04/23/ECON/L_d.jpg" alt="L_d"><br>第二个loss为轮廓一致项，鼓励前后深度值在轮廓区域相同，防止二者产生交叉，如下所示：<br><img src="/2024/04/23/ECON/L_s.jpg" alt="L_s"></p><ol start="3"><li>Human shape completion</li></ol><p>直接合并前后表面可能会导致自我遮挡，缺失大量的点。</p><p>去掉了人体模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">M^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>的在正面和背面可见的三角形，剩余的为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mi>c</mi><mi>u</mi><mi>l</mi><mi>l</mi></mrow></msup></mrow><annotation encoding="application/x-tex">M^{cull}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span></span></span></span></span></span></span></span>，对于这部分和d-BiNI表面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>F</mi></msub><mtext>和</mtext><msub><mi>M</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">M_F和M_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行watertight重建。具体使用IF-Nets+来填补前后表面的缺失，该方法整体基于体素，训练时输入为体素化的前后穿衣服的深度图以及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">M^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span>，输出完整的3D形状。推理阶段，将上述输入送入模型中建立一个占用场，并通过Marching cube的方式生成最终的网格<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>I</mi><mi>F</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{IF}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HVTR++</title>
      <link href="/2024/04/22/HVTR/"/>
      <url>/2024/04/22/HVTR/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MagicAnimate</title>
      <link href="/2024/04/18/MagicAnimate/"/>
      <url>/2024/04/18/MagicAnimate/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>首先提出一个diffusion model编码时间信息。此外，使用一个外观编码器保留参考图像中的复杂细节。此外还提供了一个视频融合技术解决长视频生成问题。</p><h2 id="pipeline">Pipeline</h2><p>首先框架中添加了一个视频扩散模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">F^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，通过时间注意力模块来捕捉不同帧间的信息。使用了个一个外观编码器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>a</mi></msup></mrow><annotation encoding="application/x-tex">F^a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span></span></span></span>来间图像编码为外观embedding <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">y_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>控制模型在保持身份和背景的前提下进行动画。整体pipeline可以称作MagicaAnimate，参考图像通过外观编码器编码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">y_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。运动序列通过DensePose和ControlNet后提取出运动条件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>p</mi><mrow><mn>1</mn><mo>:</mo><mi>k</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">y_p^{1:k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.232216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span>，这两个信号送入diffusion中训练。小段视频合成长短视频时使用融合的方法来提高平滑度。最后使用image-video联合训练的方式，来保证身份保留和但真图像可信度。</p><p><img src="/2024/04/18/MagicAnimate/pipeline.jpg" alt="pipeline"></p><ol><li><p>Temporal Consistency Modeling<br>将diffusion model扩展到视频域，通过将时间注意力层插入到原始的2D UNet中得到3D时间UNet。采样的latent噪声<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>z</mi><mi>t</mi><mrow><mn>1</mn><mo>:</mo><mi>K</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">z^{1:K}_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> reshape到(NK<em>C</em>H<em>W)输入到diffusion网络中，在时间模块中将其按照通道reshape，即(NHW</em>K*C)，沿着时间通道计算帧间的交叉信息。为每一帧添加了正弦位置编码。</p></li><li><p>Appearance Encoder<br>外观编码器<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">F_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>旨在输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">I_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的身份和背景相关特征。在每个去噪步中计算条件向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">y_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p></li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>a</mi></msub><mo>=</mo><msub><mi>F</mi><mi>a</mi></msub><mo stretchy="false">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>I</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msup><mi>θ</mi><mi>a</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_a=F_a(z_t|I_{ref}, t, \theta^a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">y_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是中间上采样模块的标准化的attention中间状态。将这些特征y传递到UNet空间自注意力层注入外观信息。</p><ol start="3"><li>Animation Pipeline<br>使用OpenPose检测出的关键点稀疏且不具备鲁棒性，使用DensePose作为运动信息，并使用ControlNet编码对应信息。</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><msubsup><mi>F</mi><mi>p</mi><mrow><mo stretchy="false">(</mo><msub><mi>z</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msup><mi>θ</mi><mi>p</mi></msup><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">y_{p, i}=F_p^{(z_t|p_i, t, \theta^p)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.321108em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><ol start="4"><li><p>Long video animation<br>采用overlap的形式，重叠s帧一次生成K帧。</p></li><li><p>Training<br>第一阶段忽略时间注意力层层，将外观编码器和ContralNet一起进行训练。在第二阶段，只优化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">F^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>中的时间注意力层。<br>两个阶段的loss分别如下，第一阶段是单帧的diffusion loss，第二阶段是整个序列的diffusion loss。<br><img src="/2024/04/18/MagicAnimate/L1_loss.jpg" alt="L1_loss"><br><img src="/2024/04/18/MagicAnimate/L2_loss.jpg" alt="L2_loss"><br><strong>image-video joint trainning</strong>由于视频数据集较少，没有很多的身份、背景和姿势，导致模型的参考条件的影响能力下降，因此采用了image-video联合训练的策略。<br>在第一阶段，从均匀分布采样一个随机数，小于设定的阈值就使用图片训练，条件pose <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>直接从参考图像中获得，学习的目标变成为图像重建。<br>在第二阶段，从均匀分布里选择了两个随机数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">r_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">r_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，当采样到不同的数值是采用把不同的训练策略如下所示：<br><img src="/2024/04/18/MagicAnimate/training_stage.jpg" alt="training_stage"></p></li></ol><h2 id="experiments">Experiments</h2><p>数据集：<br>TikTok数据集包含350段舞蹈视频，TED-talks包含1203段TED视频。</p><p>Baseline：<br>基于GAN的方法——MRAA和TPS，这些方法通过估计光流的方式驱动原始图像，通过GAN来绘制遮挡的区域。<br>基于diffusion的方法——DisCo<br>IPA+CtrlN——将IP-Adapter和ControlNet相结合<br>IPA+CtrlN+V——添加了时间注意力模块</p><p>Evaluation metircs：<br>单张图像——SSIM，LPIPS，PSNR和FID<br>视频真实度——FID-FVD和FVD<br>TED数据集——L1，AKD，MKR和AED</p>]]></content>
      
      
      
        <tags>
            
            <tag> Human Motion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Champ</title>
      <link href="/2024/04/16/Champ/"/>
      <url>/2024/04/16/Champ/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>使用latent diffusion model和3D人体参数化模型，增强形状对齐和动作指导。</p><h2 id="pipeline">Pipeline</h2><p>输入为一张人物图像和一段参考视频序列，最终输出人物图像重复作参考视频中运动的序列。</p><p><img src="/2024/04/16/Champ/pipeline.jpg" alt="pipeline"></p><ol><li>Multi-Layer Motion Condition</li></ol><p>SMPL to Guidance Condition:<br>参考图像<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">I_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和驱动动作序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mrow><mn>1</mn><mo>:</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">I^{1:N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span>，利用4D-Human估计对应的SMPL模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">H_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mi>m</mi><mrow><mn>1</mn><mo>:</mo><mi>N</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">H_m^{1:N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>。将SMPL网格渲染到成2D表示，包括深度图、法线图、语义图。</p><p>Parametric Shape Alignment：<br>核心目的是保持原有身份的基础上进行驱动，借助SMPL进行参考图像与运动序列在形状和姿势上的对齐，即形状<span class="katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \belta at position 1: \̲b̲e̲l̲t̲a̲_{ref}">\belta_{ref}</span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>θ</mi><mi>m</mi><mrow><mn>1</mn><mo>:</mo><mi>N</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\theta_m^{1:N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，对齐后每帧SMPL可以表示为:</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>H</mi><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi></mrow><mi>i</mi></msubsup><mo>=</mo><mi>S</mi><mi>M</mi><mi>P</mi><mi>L</mi><mo stretchy="false">(</mo><mi mathvariant="normal">/</mi><mi>b</mi><mi>e</mi><mi>l</mi><mi>t</mi><msub><mi>a</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">/</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msubsup><mi>a</mi><mi>m</mi><mi>i</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_{trans}^i=SMPL(/belta_{ref}, /theta_m^i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.121664em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.160772em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>将上面对齐后的SMPL渲染指导视频生成。</p><ol start="2"><li>Multi-Layer Motion Gudiance<br>上面完成了形状层级的对齐，接下来额外引入了骨架来辅助复杂动作的表示(例如表情和手势)。利用latent feature embedding和self-attention框架，对人体形状和姿势的多层嵌入进行空间加权，产生multi-layer语义混合作为运动指导。</li></ol><p>Guidance Self-Attention：<br>设计了一个包含多个轻量级网络的encoder，将每个指导条件通过一个指导网络<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>F</mi><mi>i</mi></msup><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo separator="true">,</mo><msup><mi>θ</mi><mi>i</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F^i(·, \theta^i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>编码为特征。特征条件先经过卷积层得到特征，紧接着通过自注意机制模块捕捉信息。</p><p>Multi-Layer Motion Fusion：<br>使用0卷积提取每个指导条件的特征，最终所有指导条件通过编码器后聚合起来，得到特征y。</p><ol start="3"><li>Network<br>Network Structure：<br>设计了一个motion embedding将从SMPL得到的2D/3D运动指导注入到模型中。多个运动指导通过self-attention单独细化，最终通过一个多层运动混合模块混合在一起。此外还使用VAE Encoder和CLIP将参考图像编码。其中VAE embedding输入到ReferenceNet中，保证生成视频与参考图像之间的角色和背景一致性。同时使用一些列运动模块在帧见使用时间注意力，实现运动的对齐。这个过程能够减少参考图像和运动指导之间的差异。<br>training：<br>第一阶段，基于图像进行训练，并去掉了运动模块。将网络中的VAE、CLIP Encoder固定，更新Guidance Encoder，Denoising U-Net和reference encoder。在这个阶段，从视频中随机抽取一张作为参考图像，另一张作为目标图像。从目标图像中提取出多层知道并送入Guidance network中。这一阶段目的在于利用目标图像的多级引导生成高质量的动画图像。<br>第二阶段，引入运动模块来增强模型的时间相干性和流动性。通过AnimateDiff预训练权重初始化，使用24帧视频作为输入，其中Guidance Encoder，Denoising UNet和reference encooder进行固定。</li></ol><p>Inference：</p><h2 id="dataset">Dataset</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Human Motion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简读语音-手势23-24文章</title>
      <link href="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/"/>
      <url>/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="gesture-diffuclip">Gesture DiffuCLIP</h2><p>github主页：<a href="https://pku-mocca.github.io/GestureDiffuCLIP-Page/">https://pku-mocca.github.io/GestureDiffuCLIP-Page/</a></p><p>本篇文章使用CLIP从文本、动作序列、视频中提取样式表示，并指导一个latent diffusion生成高质量的手势。设计了一个手势-文本对齐机制通过对比学习纠正手势生成。</p><p>特点：</p><ol><li>使用多模态的prompts控制跨模态运动合成中的风格</li><li>使用latent diffusion model合成高质量的动作，提出了一个基于transofrmer和AdaIN层将风格引入diffusion model中</li><li>使用对比学习的策略学习文本和手势之间的语义对应</li><li>使用自监督的学习框架，基于大规模多模态预训练模型，不需要训练数据和标签</li></ol><h3 id="整体架构">整体架构</h3><ol><li><p>系统包含两个架构，下面为latent diffusion model将语音和对应文本作为输入生成对应的手势；上面基于CLIP Encoder从语音、文本、动作序列prompt中提取风格并通过AdaIN嵌入到diffusion中进行风格控制<br><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/GestureDiffuCLIP_arch.jpg" alt="GestureDiffuCLIP_arch"></p></li><li><p>运动表示上使用VQ-VAE来学习紧凑的运动表示，保证快速推理过程中手势的质量和多样性。其中运动序列由关节+全局的6D旋转向量表示，VQ-VAE编码器将运动序列提取为潜空间代码，并维持了一个codebook。</p></li><li><p>学习手势和语音文本的联合嵌入空间，学习两个模态间的联系。<br>整体架构如下所示，其中包含手势编码器和文本编码器，将手势动作和语音文本映射到共享的嵌入空间中，文本编码器将分词embedding(与语音已经对齐)编码到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">Z^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>，手势编码器将手势序列在VQ-VAE中quantized的潜表示编码到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>g</mi></msup></mrow><annotation encoding="application/x-tex">Z^g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span></span></span></span>，由于现实中文本与语音并非完美对齐，对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">Z^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>g</mi></msup></mrow><annotation encoding="application/x-tex">Z^g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span></span></span></span>序列进行最大池化凝聚语义相关信息得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">z_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">z_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为最终的文本和手势embedding。文本编码器基于T5-base的预训练模型，动作编码器采用在动作数据集上进行预训练的transformer encoder。<br><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/GestureDiffuCLIP_latent.jpg" alt="GestureDiffuCLIP_latent"></p></li></ol><p>对比学习类似CLIP通过最大化匹配文本-动作序列对和最小化不匹配对相似性。</p><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/GestureDiffuCLIP_%E5%AF%B9%E6%AF%94%E5%AD%A6%E4%B9%A0.jpg" alt="GestureDiffuCLIP_对比学习"></p><ol start="4"><li>latent diffusion</li></ol><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/GestureDiffuCLIP_pipeline.jpg" alt="GestureDiffuCLIP_pipeline"></p><p>其整体目标可以概括为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">Z</mi><mo>=</mo><mi mathvariant="bold">G</mi><mo stretchy="false">(</mo><mi mathvariant="bold">A</mi><mo separator="true">,</mo><mi mathvariant="bold">T</mi><mo separator="true">,</mo><mi mathvariant="bold">P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\bf Z=G(A, T, P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathbf">G</span><span class="mopen">(</span><span class="mord mathbf">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathbf">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathbf">P</span><span class="mclose">)</span></span></span></span></span>，其中A和T代表输入的音频和语音文本，P代表风格prompt。A通过采样得到与手势长度匹配的特征，其中表示语音的节拍和振幅。文本通过上面的文本编码器处理。G通过A推断低级手势风格节奏、压力等，T为语义级特征，P决定手势整体风格。<br>推理时定义为一个自回归模型，即出了受T和P影响，还受之前语音特征和生成动作以及未来<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mi>a</mi></msup></mrow><annotation encoding="application/x-tex">\sigma^a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span></span></span></span>帧语音特征的影响。</p><p>Semantics-Aware Attention Layer：音频特征直接与噪声手势进行连接，对于文本T经过编码得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">Z^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>z</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">z^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>并计算相似度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">s^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>并广播为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">S^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Z</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">Z^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7935559999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>被投影为K和V矩阵。通过以上这种coroos attention的模式实现语义感知。</p><p>CLIP-Guided AdaIN Layer：利用预训练的CLIP encoder将prompt映射到CLIP空间中，接着使用一个mapping层因设为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msub><mi>C</mi><mrow><mi>a</mi><mi>d</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">2C_{ada}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的形式，可以修改<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>a</mi><mi>d</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ada}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中的每个通道的均值和方差。</p><ol start="5"><li><p>数据集<br>ZeroEGGS和BEAT</p></li><li><p>总结<br>这篇文章应该只能结局短文本/语音的驱动，比较新颖的是文本和手势的对齐方式</p></li></ol><h2 id="livelyspeaker">LivelySpeaker</h2><p>code主页：<a href="https://github.com/zyhbili/LivelySpeaker">https://github.com/zyhbili/LivelySpeaker</a></p><p>整体方法分两阶段：基于文本的手势生成和基于音频的节奏细化，同样基于文本手势生成利用CLIP模型作为指导，使用基于MLP的diffusion model生成手势，音频作为控制。</p><p>特点：</p><ol><li>做到语义感知和节奏感知</li><li>diffusion model只基于MLP</li><li>可以实现文本、语音多个模态的控制</li></ol><h3 id="整体概述">整体概述</h3><p>整体包括一个语义感知生成器(SAG)和一个节奏感知生成器(RAG)</p><ol><li><p>SAG</p><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/LivelySpeaker_SAG.jpg" alt="LivelySpeaker_SAG"></p><p>整体采用3层transformer架构的encoder-decoder，将固定长度的真实的运动序列编码后再解码。此外，使用预训练好的CLIP将整个文本生成潜代码。通过CLIP和encoder输出潜代码的相似度以及重建误差来进行约束，这样可以直接通过CLIP生成运动序列。</p></li><li><p>RAG</p><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/LivelySpeaker_RAG.jpg" alt="LivelySpeaker_RAG"><br>RAG基于diffusion架构学习分布并且提供编辑功能。<br>音频编码器将音频编码为256维特征。diffusion model采用纯MLP架构，每个block包含一个时间融合的FC层和一个空间融合的FC层，使用LN、SiLU和跳跃连接。将音频特征、采用的pose和t连接送入到MLP block中，同时speaker id也被嵌入得到风格s，与输入在时间维度上对齐。</p><p>训练除了Huber Loss和velocity loss外，还有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{KL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其用来规范所有说话者在s上的分布。此外为了连贯将前面四帧进行合并，来产生长的序列动作。</p></li><li><p>Pipeline</p><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/LivelySpeaker_pipeline.jpg" alt="LivelySpeaker_pipeline"><br>使用SAG的输出可以解决RAG的韵律问题。在SAG生成语义感知的动作后，通过K步加噪得到噪声序列，在音频的指导下使用100-20步DDIM去噪得到新的分布，得到的分布既保留了SAG的多样性，又提升了韵律对齐的能力。</p></li><li><p>数据集</p></li></ol><p>TED Gesture、BEAT</p><h2 id="vlogger">VLOGGER</h2><p>项目主页：<a href="https://enriccorona.github.io/vlogger/">https://enriccorona.github.io/vlogger/</a></p><p>VLOGGER是一个one-shot，音频驱动的视频生成框架。包含一个随机的人体3D动作扩散模型；一个能通过时间、空间控制增强文本-图像模型的duffusion框架。生成的视频任意长度，可以通过高级人脸、人体特征进行保存。提出了数据集MENTOR。</p><p>特点：</p><ol><li>生成的视频除脸外还包括上半身</li><li>提出MENTOR</li><li>采用2D身体控制</li><li>在图像质量、身份维持和时间一致性上都超过了以往的方法</li></ol><h3 id="方法概述">方法概述</h3><p>整体方法分为两个阶段。第一阶段输入的音频以S比率进行采样，得到中间的身体运动控制C，负责注视方向、面部表情和3D姿势。第二部分唯一个时间image-to-image转换网络，是扩展的diffusion model通过C生成对应的帧。此外为了生成特定身份的任务，网络还采用参考人的单张图像。方法最后还有一个超分网络生成视频。</p><p><img src="/2024/04/09/%E7%AE%80%E8%AF%BB%E8%AF%AD%E9%9F%B3-%E6%89%8B%E5%8A%BF23-24%E6%96%87%E7%AB%A0/VLOGGER_pipeline.jpg" alt="VLOGGER_pipeline"></p><ol><li>Audio-Driven Motion Generation</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 调研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VLOGGER</title>
      <link href="/2024/04/08/VLOGGER/"/>
      <url>/2024/04/08/VLOGGER/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>从人物的单张图像生成音频驱动的人物视频生成。整个框架包含一个stochastic human-to-3d-motion diffusion model和一个新的基于扩散的框架通过时间和空间控制增强text-to-image模型。能够运行任意长度、高质量、可控的人脸和身体的高级表现。</p><p>此外提出了MENTOR数据集，包含800000个人动态手势的3D姿势和表情的标注。</p><h2 id="introduction">Introduction</h2><p>时间一致性通常是通过每帧图像生成网络，通过依赖于从面部关键点的平滑引导运动来实现的，会导致远离面部的地方模糊或者不一致。也有许多方法需要检测人头并裁剪，忽略了有意义的上半身，人的交流包括身体(手势、眼球注视、眨眼和姿势)。其它关注身体的方法大多缺乏泛化性，受限于场景。</p><p>整体框架分为两步走的形式。<br>首先根据音频预测面部表情和身体运动。采用了stochastic的方式来建模语音和pose、gaze、expression之间的一对多映射。<br>接着提出了一个新的扩散模型框架，能够提供时间和空间域上的控制。基于预训练过程中的人体先验，能够更好的产生一致(比如眼睛)的人物图像。<br>VKOGGER包含一个diffusion模型，并通过一个超分辨网络得到高清的结果。整个框架采用2D控制，并使用了temporal outpainting的方式生成任意长度的序列。最终可以对视频中的特定部分进行编辑。<br>鲁棒性和可泛化性方面，所使用的数据集包含更广泛的肤色、身体姿势、视角、语音和身体多样性。</p><h2 id="pipeline">pipeline</h2><p><img src="/2024/04/08/VLOGGER/pipeline.jpg" alt="pipeline"></p><p>第一网络以音频作为输入生成对应的身体运动控制C，其负责每一帧的注释方向、面部表情和3D姿势。第二个网络为一个image-to-image转换模型，其扩展了大规模的图像扩散模型，将C作为输入产生对应的图像帧。同时为了将整个过程控制为特定于身份的，同样使用了一张个人参考图像作为网络输入。</p><ol><li><p>Audio-Driven Motion Generation</p><p>将音频转化为梅尔谱图的格式。M基于transformer架构，在时间维度又四层多头注意力机制。帧数和diffusiton step有position encoding，同时一个嵌入MLP用于输入音频和diffusion step。每一帧通过掩码掩盖后面的帧，模型在变长视频基础上生成非常长的序列。<br>模型的目标为基于音频的第i帧，预测面部和身体(残差)参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">a</mi><mi mathvariant="bold">i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msubsup><mi>θ</mi><mi>i</mi><mi>e</mi></msubsup><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><msubsup><mi>θ</mi><mi>i</mi><mi>b</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">M(\mathbf {a_{i}})=\{\theta_i^e, \Delta \theta_i^b\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。通过预测位移(残差)，能够使模型将目标人物参考图像的pose <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>θ</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta^b_{ref}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2683239999999998em;vertical-align:-0.4192159999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span></span></span></span>，得到人物的相对姿势<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>θ</mi><mi>i</mi><mi>b</mi></msubsup><mo>=</mo><msubsup><mi>θ</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow><mi>b</mi></msubsup><mo>+</mo><mi mathvariant="normal">Δ</mi><msubsup><mi>θ</mi><mi>i</mi><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta_i^b=\theta_{ref}^b+\Delta \theta_i^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2683239999999998em;vertical-align:-0.4192159999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.107772em;vertical-align:-0.258664em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，几何领域的身份信息通过shape code建模，在训练和测试中，从输入图像中估计3D形状参数。将预测的表情和姿势参数进行姿态建模，光栅化建模后模板网格顶点光栅化得到密集掩膜<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold">C</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">d</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\mathbf {C_i^d}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.132216em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord mathbf">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。同样将身体区域的语义区域进行光栅化，得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold">C</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">m</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\mathbf {C_i^m}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.033108em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord mathbf">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6741079999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，其最后一个特征维度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">N_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示语义种类。<br>将diffusion用于人的动画和之前基于扭曲图像的人脸重现工作存在gap(<strong>没搞懂</strong>)，这样能够帮助重建和维持人物身份。首先将每帧中参考图像中可见的点进行渲染，得到部分扭曲结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi mathvariant="bold">C</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">w</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\mathbf {C_i^w}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.033108em;vertical-align:-0.2831079999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord mathbf">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6741079999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight" style="margin-right:0.01597em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。所有的渲染中，假设使用一个全景相机，通过训练视频或参考图像得到一个对角图像。<br>Loss函数如下，其中去噪网络直接预测真是图像。<br><img src="/2024/04/08/VLOGGER/Ldiff.jpg" alt="Ldiff"><br>此外还添加了一个时间损失函数，约束连续相邻帧之间的差异，对于身体和头部使用了不同的权重大小，使得在保证表情丰富的同时，生成平滑的头和手。</p></li><li><p>Generating Photorealistic Talking and Moving Humans</p><p>该模块需要让输入的参考图像按照上一个模块预测的身体和脸部运动进行动画。固定初始训练好的模型，将其中的编码拷贝进行0初始化，该拷贝可学习且将时间控制<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>作为输入。其中在每层的降采样模块和GroupNorm激活函数在时域上使用1<em>1的卷积。<br>在MENTOR数据集上进行训练。训练中输入为一段连续视频帧，以及给人的任意一张参考图像，该图像可以是视频中的人一张。网络首先在单张图像上训练新的控制层，在在视频序列上添加时间组件。<br>网络生成的视频为128</em>128，并使用了一个级联diffusion的方式来生成256<em>256和512</em>512的视频。<br>上面的temporal diffusion只能生成固定的N长视频，使用outpainting的方式进行推理，产生人一场的序列。</p></li></ol><h2 id="实验部分">实验部分</h2><p>Metrics：<br>1.图像质量：FID score，衡量生成和真实图像分布；Cumulative Probability of Blur Detection(CPBD)和Natural Image Quality Evaluator(NIQE)衡量图像质量。<br>2.嘴唇同步：估计人脸关键点坐标，并计算嘴部顶点位置的差异(LME)。<br>3.LSE-D分数<br>4.视频时间平滑性：对抖动进行评估<br>5.多样性评估：计算了表情参数的方差</p><ol><li>Albation Study</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>S2G-MDDiffusion</title>
      <link href="/2024/04/03/S2G-MDDiffusion/"/>
      <url>/2024/04/03/S2G-MDDiffusion/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>本篇文章相比之前文章最大的亮点是直接生成语音驱动手势的视频，而不是基于骨架或者SMPL-X参数化模型。文章需要解决两个问题，一是从外观中提取出复杂的人体运动特征；二是对任意长度的片段，需要讲手势和语音进行对齐，保留其中的对应关系。</p><p>文章提出一个解耦框架，首先提出了一个非线性TPS transformation再保留图像外观信息的同时提取出运动潜代码。接着通过一个基于transformer的diffusion model来学习手势和语音之间的联系，并在motion latent space进行生成，并使用一个优化动作选择模块来生成长时间一致性和匹配的手势视频。此外设置了一个refinement网络解决缺失细节的问题。</p><h2 id="introduction">Introduction</h2><p>基于骨架的方法丢掉了人的外观信息并且容易导致不真实感，并且需要讲过Maya、Blender进行渲染。</p><p>有一些图像合成方法，将骨架转化成可以动画的图像，这种方法由于需要手工标数据，费时费力，同时经常存在帧间抖。</p><p>直接通过语音驱动生成匹配的手势视频的困难在于：<br>1）需要找到特征表示复杂的运动轨迹和人体外观。先生成骨架并将骨架作为运动信息合成动画图像会导致纹理损失和误差累计。或者使用条件生成视频，讲视频编码到隐空间并生成内容，这些方法主要关注于一般的视频生成，其潜在特征来自于缺乏明确定义的意义，难以有效地过滤和保留必要的视频信息，直接应用会导致不现实的运动和细粒度部分的确实。<br>2）很难捕捉长时间的手势和音频之间的时间依赖，而且许多方法只能生成2s左右的视频，碍于计算资源等条件。</p><h2 id="pipeline">pipeline</h2><p>核心观念是进行进行解耦和生成运动信息，作为视频生成过程中的桥梁。方法可表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><mi>ε</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V=F(G(\varepsilon(S), a), S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">ε</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varepsilon(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ε</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span>从源图像中解耦出原始运动特征，其和音频一起作为条件输入到diffusion model G中，最后通过细化网络F完成详细运动-视频生成。</p><p><img src="/2024/04/03/S2G-MDDiffusion/pipeline.jpg" alt="pipeline"></p><ol><li><p>Motion Decoupling Module with TPS</p><p>现有的图像中2D pose估计器丢失了关键点附近的外观信息，难以进行精准的控制和高质量渲染。同时这些方法基于手工标注的数据，经常会出现抖动、错误的铰链等线性。为此作者设计了一个非线性的transformation TPS，能够很好的处理曲线并增强模型表示不同身体区域的能力。</p><p>TPS transformation：TPS想要利用已知的成对关键点作为控制，学习原始空间D到编写空间S的映射，如下所示：</p><p><img src="/2024/04/03/S2G-MDDiffusion/TPS_equlation.jpg" alt="TPS_equlation"><br>给定一张原始空间D和形变空间S对应的驱动图像和原始图像，TPS建立两帧之间的局部联系，可以用于后面估计全局光流。其中TPS中使用的对应关键点对采用自适应边界检测，其中包含了运动相关的外观信息，可以进一步用于生成视频。这里使用的成对关键点采用了自适应边界检测的方法得到，其包含运动和关键外观信息。最终TPS输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>可以用于端到端的自监督训练。</p><p>KeyPoints predictor：<br>通过predictor预测K*N个关键点，接着进行K个TPS transformation，每次使用N个点。其中S和D中图像分别进行估计后配对，这些关键点能够合成全局光流指导图像动画。</p><p>Optical flow predictor：<br>TPS通过关键对讲S图像弯曲到D得到K张变形后的图像，optical flow predictor能够处理这些堆叠的图像，并输出像素级的光流蕴含全局的运动信息。同时该predictor也将输出一个遮挡掩膜，与上面的光流图共同输入到图像合成网络中。</p><p>Image synthesis network：<br>由于S和D的错位与遮挡，TPS无法生成很好的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>，因此使用一个encoder-decoder框架的图像合成网络，将S按不同尺度编码为特征图，在特征空间上作翘曲并通过遮挡掩膜引导遮挡，最后解码器构建出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span>。</p><p>Training loss：<br>使用感知构建损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>p</mi><mi>e</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{per}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，方差损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>e</mi><mi>q</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{eq}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，翘曲损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>w</mi><mi>a</mi><mi>r</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{warp}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>通过无监督的方式训练整个模块。</p></li><li><p>Laatent Motion Diffusion Model<br>对于跟定M帧的视频序列，使用训练好的预测器检测关键点，每帧关键点炸开为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mi>K</mi><mo>∗</mo><mi>N</mi><mo>∗</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">C=K*N*2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>的潜运动特征，得到M*C的特征序列。</p><p>Model：<br>diffusion model在给定噪声<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi mathvariant="bold">t</mi></msub></mrow><annotation encoding="application/x-tex">\bf x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>和条件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mo separator="true">,</mo><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">c=\{a, x_0^{(0)}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mopen">{</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>后输出干净的运动特征序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo>^</mo></mover><mn mathvariant="bold">0</mn></msub></mrow><annotation encoding="application/x-tex">\bf \hat{x}_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85788em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">x</span></span></span><span style="top:-3.01344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_0^{(0)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>是从原始图像S(比如视频第一帧)中提取出来的运动特征。对于音频使用WavLM Large提取堆叠特征和手工标注的音频特征共同构成a，前者通过插值的方式与后者按时间对齐，同时音频也与手势序列对齐。<br>latent diffusion model基于transformer架构，如下所示：</p><p><img src="/2024/04/03/S2G-MDDiffusion/LDF_arc.jpg" alt="LDF_arc"></p><p>音频a通过encoder得到embeddings。原始图像序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_0^{(0)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>重复M倍与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi mathvariant="bold">t</mi></msub></mrow><annotation encoding="application/x-tex">\bf x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>对齐，并与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi mathvariant="bold">t</mi></msub></mrow><annotation encoding="application/x-tex">\bf x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>拼接送入self-attention网络中，捕捉运动序列间的时间交互作用。之后语音embeddings投影到cross-attention层与self-attention的输出共同学习语音和动作的内在联系。</p><p>Training losses：<br>&quot;simple&quot;损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{simple}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，使用潜特征计算的几何损失(速度和加速度)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>v</mi><mi>e</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{vel}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>a</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{acc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，最终公式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi></mrow></msub><mo>=</mo><msub><mi>L</mi><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mrow><mi>v</mi><mi>e</mi><mi>l</mi></mrow></msub><msub><mi>L</mi><mrow><mi>v</mi><mi>e</mi><mi>l</mi></mrow></msub><mo>+</mo><msub><mi>λ</mi><mrow><mi>a</mi><mi>c</mi><mi>c</mi></mrow></msub><msub><mi>L</mi><mrow><mi>a</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{diff}=L_{simple}+\lambda_{vel} L_{vel}+\lambda_{acc} L_{acc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>Refinement Network</p><p>图像合成网络合成的帧存在一些伪影，导致细节缺失，特别是在遮掩掩码标记的遮挡区域和复杂纹理区域(手和脸)出现了这些情况。</p><p>使用UNet类架构和残差模块捕捉全局和局部信息。此外将图像帧与同等分辨率的遮挡掩膜相结合作为细化网络的输入，使得网络更加关注遮挡区域。此外，未来更加集中于特定得到区域，利用MobileSAM分割手部和脸部，并对手、脸和遮挡区域赋予更高的L1重建loss权重。</p></li><li><p>Inference</p><p>输入一张原始图像和音频，检测原始图像关键点并形成原始运动特征。以原始运动特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_0^{(0)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span></span>和音频a为条件，采样高斯噪声序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi mathvariant="bold">t</mi></msub></mrow><annotation encoding="application/x-tex">\bf x_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29444400000000004em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，执行反向DDPM。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi mathvariant="bold">x</mi><mo>^</mo></mover><mn mathvariant="bold">0</mn></msub><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mrow><mi mathvariant="bold">a</mi><mo separator="true">,</mo><msubsup><mi>x</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msubsup></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pmb{\hat{x}_{0}}=G(x_{t}, t, {\pmb a, x_0^{(0)}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="inner"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.050187499999999996em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.311108em;vertical-align:-0.26630799999999993em;"></span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="inner"><span class="mord"><span class="mord mathdefault">a</span></span></span><span class="fix"></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.050187499999999996em;"></span><span class="mord mathdefault">a</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，T步后得到干净的样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。最终通过一个最佳运动选择模块得到一致亲切连贯运动特征序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi mathvariant="bold">x</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\bf \tilde{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.70788em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.70788em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathbf">x</span></span></span><span style="top:-3.36344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2875em;"><span class="mord mathbf">~</span></span></span></span></span></span></span></span></span></span></span>，将其便会K*&amp;N的成对关键点的形式，进行K TPS transformations估计光流和遮挡掩码。TPS输出送入图像合成网络生成图像帧，并与对应掩码再次输入到细化网络中得到细粒度的结果，生成最终视频。</p><p>Optimal motion selection module：<br>基于transformer的diffusion model模型只能处理固定长度的输入，无法应对任意长的输入。同时只用一帧原始图像作条件生成固定长度片段再进行拼接，会导致两段之间的不一致性，并导致闪烁、抖动。<br>作者在推理阶段引入一个利用diffusion model多样性生成能力的最优运动选择模块。从第二段开始，为相同的音频段生成候选序列P。接着基于两个假设对每个候选序列进行打分。即在真是运动序列的一小个间隔内，一是关键点的位置应该接近，二是关键点的速度方向相似。得分最低的序列将被用做生成运动序列。</p></li></ol><h2 id="实验">实验</h2><p>数据集：PATS——我们的实验数据来自PATS数据集[1,2,14]，包括对齐的音频和文本转录姿势，包含来自25个发言人的约84,000个片段，平均长度为10.7s，共251小时。实验在Jon, Kubinec, Oliver, and Seth这四个人的数据进行。</p><p>数据预处理：<br>1）剪掉观众声音大、镜头晃动大等无意义图像<br>2）片段长度限制到4-15s，并重采样到25fps<br>3）方形建材，并resize到512*512<br>4）通过手工制作的起始音和色谱图特征以及 WavLM [9] 特征扩展这些子集<br>最终每个主题1200个片段，90%用于训练，10%用于验证</p><p>评价指标：<br>FGD、Diversity(在PATS上训练了一个自回归编码器，提取姿势特征)、Beat Alignment Score、FVD(该指标评估手势视频质量，使用I3D分类器在特征空间上计算FVD)</p><p>对比方法：<br>ANGIE、MM-Diffusion(已开源)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DiffSHEG</title>
      <link href="/2024/03/31/DiffSHEG/"/>
      <url>/2024/03/31/DiffSHEG/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>DiffSHEG提出了基于扩散模型、音频驱动的，完整的3D脸部表情和手势生成模型，能够匹配任意长度。为了解决表情和手势的匹配，基于diffusion的语音匹配生成transformer模块设置了从表情到手势的单向信息流。此外，对于任意长度的输入序列引入了一个outpainting-based采样策略，提供灵活性和计算高效性。</p><p>近期一些语音匹配的3D表情和手势生成模型，要不选择将两个独立的模型结合，要不选择建模为一个多任务问题，这些方法忽略了手势和表情的潜在联系，导致表情-手势联合分布的不协调与偏差。</p><h2 id="pipeline">pipeline</h2><p>提出了一个基于diffusion models的框架，具备从expression到gesture的单向流信息，来进行匹配语音的表情、手势的合成，捕捉他们的联合分布。推理阶段，为了生成任意长度的动作序列，提出了一种out-painting-based部分自回归（FOPPAS）采样策略，该策略逐个生成部分重叠的片段，并在交叉点处产生平滑的运动。</p><ol><li><p>Problem Formulation</p><p>对于N帧的片段，音频被编码为N个音频特征A，手势特征用关节旋转向量表示G，表情使用blendshape权重表示E，运动序列即为(G, E)相结合。</p></li><li><p>DiffSHEG Framework</p><p>整体框架包含音频编码器和UniEG Transformer生成器。生成器包括两个模块，Motion-Speech Fusion Residual Block和Style-aware Transformer Block。</p><p><img src="/2024/03/31/DiffSHEG/pipeline.jpg" alt="pipeline"></p><p>语音编码：<br>将音频转化为梅尔谱图和HuBERT特征，作为语音的低级和高级特征。在训练过程中HuBERT编码器固定。梅尔谱图特征放入到Transformer编码其中，该编码器被表情和手势分支共享，提取出中层的语音特征。(这是基于多任务学习的经典设计，其中特定于任务的解码器可以共享低水平特征以彼此受益)。</p><p>Motion-Speech Fusion Residual Block:<br>语音-动作对齐，将语音embedding和motion序列以及其它一些优化时间条件按照特征(比如文本)维度拼接，无需使用cross-attention时间条件掩码。特征融合部分，使用线性层会降低收敛速度和导致训练不稳定，motion speech fusion residual模块将连接好的特征融合，并投影到与运动特征相同的形状。整个模块包括MLP和LN层。其中MLP用于预测原始运动特征的残差，用于快速收敛。</p><p>Style-aware Transformer Block:<br>向从Motion-Speech Block中输出的融合特征中注入风格和t。首先style(person ID)和t通过MLP被投影到相同的形状的向量。接着上面的两个全局向量的和注入到AdaIN模块。两个AdaIN插入到Linear self-attention和MLP后。其中AdaIN根据融合全局向量中计算出的统计特性进行统计特征替换(<strong>没有明说，但应该与方差、均值有关</strong>)，其中linear self-attention可以加速推理速度。</p><p><img src="/2024/03/31/DiffSHEG/Style-aware_Transformer_Block.jpg" alt="Style-aware Transformer Block"></p><p>Uni-directional Expression-to-Gesture:<br>将t时刻预测出的表情输入到gesture transformer block。其中表情通过t时刻预测出的表情噪声计算得到。为了防止手势分支的梯度受到expression encoder的影响，作者在将预测表情传入gesture encoder时消除了其梯度。</p><p><img src="/2024/03/31/DiffSHEG/Uni-EG_Transformer_Generator.jpg" alt="Uni-EG_Transformer_Generator"></p></li><li><p>Training</p><p>Loss functions:<br>L_t——Diffision Model的噪声损失<br>L_v——velocity loss，计算公式如下，应该是计算GT和预测运动序列中相邻两帧差值的平均平方误差，如下所示：<br><img src="/2024/03/31/DiffSHEG/L_v.jpg" alt="L_v"></p><p>L_δ——Huber Loss，衡量运动序列重建的损失：<br><img src="/2024/03/31/DiffSHEG/L_%CE%B4.jpg" alt="L_δ"></p><p>由此得到最终的loss函数如下，其中各loss权重分别为10， 1， 1。<br><img src="/2024/03/31/DiffSHEG/L.jpg" alt="L"></p></li><li><p>任意长度运动序列生成</p><p>在测试阶段通过outpainting实现任意长度的采样，具备更强的灵活性、更少的计算消耗。<br>Fast Outpainting-based Partial Autoregressive Sampling(FOPPAS)，如下图：</p><p><img src="/2024/03/31/DiffSHEG/FOPPAS.jpg" alt="FOPPAS"></p><p>从第二段开始，将上一片段的最后几帧固定为这一段的初始帧，后面画出片段剩余的帧，可以看作一个部分自回归的采样。相比于以前的一些方法需要seed motion去产生first clip，方法可以设置重叠为0生成第一个片段(<strong>有点疑问</strong>)。</p><p>Shorter Clip:<br>在推断比训练片段更短的片段时，采用丢弃多余的位置编码，如上图的最后一个片段所示。</p><p>Towards Real-time Sampling:<br>文章没有采用原来的DDPM，而是修改Repaint用于DDIM采样，使用25步的DDIM代替1000步的DDPM，提升了40倍的推理速度。</p><p>Last-steps Refinement with Blending：<br>在最后两步采样中对重叠部分进行线性混合来消除片段边界的不一致性。</p></li></ol><h2 id="实验">实验</h2><ol><li><p>数据集</p><p>BEAT和TALK SHOW的数据集。对于BEAT在训练和验证时划分为34帧的窗口期，测试时采用64帧的长度(约1min)，使用旋转角表示平滑的动作生成。SHOW中训练和验证阶段为88帧运动片段，测试时使用不同长度的运动序列。</p></li><li><p>Setup</p><p>设备：<br>5张3090，对于BEAT，batch_size为2500，训练1000步；SHOW，batch_size为950，训练1600轮。</p><p>Baselines:<br>CaMN、DiffGesture、DiffuseStyleGesture和LDA。<br>CAMN随着BEAT一起提出，基于LSTM，可以(文本、语音、面部、情绪)多条件混合。</p><p>4个baseline训练均在轴角旋转表示上，而不是欧拉角，对于表情生成，以上四个方法只针对手势生成，因此将手势替换到表情数据中独立生成表情数据。所有的模型只受audio和person ID控制。</p><p>对于SHOW数据集，采用TalkSHOW和LS3DCG作为baseline，它们都关注表情和手势的联合分布，同时在手势生成时只关注上半身的运动。</p></li><li><p>定性对比</p><p>DiffGesture、DiffStyleGesture和LDA均出现了抖动，CaMN和本文方法没有。表情上，CaMN嘴唇不同步，其它方法没问题。同时CaMN很少眨眼，其它的对比方法眨眼频率频繁，虽然得到了更高的多样性分数，但是眨眼频率于真实数据相差较大。</p><p>TalkSHOW采用的VQ-VAE忽略了高频手势导致动作缓慢。LS3DCG会生成扭曲的手臂，可能是其确定性的CNN架构导致的。</p><p>User Study:<br>从BEAT测试集中采样了8段一分钟视频，从SHOW中采样12段10s长视频，与真实数据在全身真实感、表情-语音同步、手势-语音同步和全身多样性上进行对比。</p></li><li><p>定量对比</p><p>评价指标：<br>1）FMD、FGD和FED<br>2）PCM(percent of correct Motion parameters)，在运动参数上计算而不是关键点上.SRGR(weighted version of PCM)，根据BEAT中的时间语义计算。<br>3）Div<br>4）BA</p></li><li><p>消融实验</p><p>包括去掉表情对手势编码器的控制、保留表情进入手势中的梯度、简单的讲表情和手势送入到单个Transformer去噪模块中以及改为手势控制表情的合成。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>amuse</title>
      <link href="/2024/03/21/amuse/"/>
      <url>/2024/03/21/amuse/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract-and-introduction">Abstract And Introduction</h2><p>提出了一个基于latent diffusion，核心贡献在于解耦合，将驱动音频解缠为三个latent vector：content，emotion和personal style。随机采样噪声来为相同的表达产生多种不同的手势。</p><p>整体的amuse包含三个组件(1)自编码器生成解缠向量：content，emotion，style.(2)使用VAE形式的3D身体运动先验，生成平滑和逼真的姿势(3)一个latent diffusion在给定content，emotion和style向量后生成3D身体运动</p><h2 id="pipline">pipline</h2><ol><li>3D身体先验模型</li></ol><p>使用SMPL-X，300维shape，关节忽略掉下半身的8个关节点，保留47个，并使用连续6D旋转表示关节。表情参数进行忽略。</p><ol start="2"><li>语音解缠模型</li></ol><p>整体框架：目标是将输入音频解缠为content、emotion和style的潜在表示，设计了一个编码-解码结构，包括三个编码器来编码每个潜空间，并使用解码器将三个潜向量。其中三个编码器的输入为滤波器图像（<strong>结合了来自 DeiT 等visualtransformer模型的思想，以及处理音频数据中的滤波器图像的技术，旨在从输入音频数据中学习有意义的表示，并使用提取的特征重建滤波器图像。</strong>）解码器将潜表示解码重建出滤波器图像。解码器架构包含一个fusion模块和几个transformer编码层。<br><img src="/2024/03/21/amuse/pipeline.jpg" alt="pipeline"></p><p>训练：音频模块使用了重建损失、三种重建交叉损失(改变c、s或e来重建图像)。此外，在潜向量预测方面采用了情绪和风格的分类、两段相同内容音频的内容相似度损失。</p><ol start="3"><li>手势生成模型</li></ol><p>运动先验：使用了一个VAE transformer架构，编码器P_E和解码器P_D都采用了类似U-Net的架构。编码器将T帧的SMPL-X参数作为输入，前两token的输出μ和Σ通过重参数化的方法提取运动潜表示。解码器中将0位置编码作为查询输入，并将运动潜在信息作为记忆传递到每个交叉注意力变换层，从而生成重建的运动序列。<br><img src="/2024/03/21/amuse/motion_piror.jpg" alt="motion_prior"></p><p>Diffusion process: 使用固定方差和随时间线性缩放的噪声(其实就是随着时间增长，噪声比例以线性方式增长)。为运动潜在信息z_m(就是上面提到的c，e，s和运动先验)逐渐加D步噪声(加噪过程与diffusion model一致，一步到位)。</p><p>Conditional denosing preprocess：通过逐步的去掉一个有条件的噪声运动潜向量来获得每一步去噪运动潜在信息。denoiser是一个latent variable model(潜变量模型，假设观测数据的生成过程中存在一些未观测到的潜在变量，潜变量模型的目标是通过观测数据推断出潜在变量的性质和相互关系，从而更好地理解数据的生成机制。)，架构与P_E的U-Net形结构类似。去噪模块的输入为c、e、s、当前扩散时间步长t_d的潜在表示z_m和对应的正弦位置编码SE(t_d)。</p><p>training：通过三步前向传递的方式，联合优化运动先验和denoiser，确保在去噪过程中音频和动作的潜代码对齐。首先通过前向传递重建出运动先验序列。接着禁止P_E的梯度计算来推断中间运动潜代码sg[z_m]，之后将其作为输入传入到denoiser中。denoiser预测出噪声用于计算diffusion model的梯度。最后将去噪后的结果传入解码器P_d中生成动作序列。</p><p>Losses：<br>对运动先验的约束：使用了标准的VAE损失，包括对真实和运动先验生成的姿势参数和顶点坐标的平滑L1损失。对运动先验使用KL散度损失进行约束。<br>diffusion生成动作和输入音频的对齐：对使用diffusion推断和真实的姿势参数和顶点坐标的L1重建损失。<br>添加了采样噪声和denoiser输出的L2损失。(<strong>啥</strong>)</p><p>Inference：<br>使用DDIM（<strong>啥</strong>）以及少量的去噪步骤推断出高质量条件运动样例。在推断过程中，从正态分布中采用噪声后进行去噪，并将结果通过解码器解码得到运动序列。</p><ol start="4"><li>手势编辑</li></ol><p>使用两段音频进行驱动，可以通过组合c、e和s的形式，实现手势的可编辑性。</p><ol start="5"><li>Implementation Details</li></ol><p>动捕数据：采用BEAT，120Hz，降采样到30Hz，再使用MoSh++处理获得SMPL-X参数</p><p>音频预处理：使用属于八种情绪类别标签（中性、快乐、愤怒、悲伤、轻蔑、惊讶、恐惧和厌恶）的音频序列。每个持续10秒的音频块被转换为一个滤波器组，其中包含128个梅尔频率箱，使用25毫秒的Hamming帧窗口和10毫秒的帧移。在频域使用最大长度24对每个样本进行掩码，在时域使用最大长度96对每个样本进行掩码。之后标准化了滤波器组，并通过噪声注入和循环移位对其进行了增强。最后每个输入到模型中的每个滤波器组被分割成固定的1209个patches，每个patch16*16，在时域和频域上有6个单元重叠。</p><p>运动先验：VAE 9层，4heads。encoder-decoder是一个U-Net类似的transformer。可学习的位置编码被注入到每个多头感知层。</p><p>denoiser：hidden dimension为1024，使用1000步的加噪进行训练，50步进行推理。</p><h2 id="实验部分">实验部分</h2><ol><li>定量实验</li></ol><p>设计了一个基于transformer架构的自编码器，将CLS token加入到序列开头，并使用情绪分类交叉熵进行约束，在BEAT数据集上进行训练，使用它的输出特征计算FGD，Gesture diversity(Div)，Gesture emotion accuracy(GA)，Beat Align(BA)，Sementic Relevant Gesture Recall(SRGR)</p><ol start="2"><li>定性实验</li></ol><p>评估语音和手势是否同步，重要的是不能出现gesture基本不动的情况</p><h2 id="讨论与未来工作">讨论与未来工作</h2><p>目前工作只关注了上半身，对于下半身的运动和移动并没有进行考虑。同时目前语音和手势可以匹配，但并没有考虑语义。此外，该方法并没有考虑表情。</p><h2 id="appendix">APPENDIX</h2><ol><li><p>Speech Distentanglement Model</p><p><img src="/2024/03/21/amuse/Speech_Distentanglement_Model.jpg" alt="Speech_Distentanglement_Model"></p><p>整体包含三个transofrmer encoder，一个transformer fusion和一个transformer decoder。输入为同一内容在不同情绪或者不同人的说话音频，得到其滤波器组，通过三个transformer encoder分别得到三个解缠的latent：e，c，s。使用transformer fusion将三个latent通过cross attention创建出单个embedding。最后使用transformer decoder重建出原本的组滤波器。</p><p>基于DeiT预训练权重，将音频的组滤波器图按照16*16的patch输入线性层陷入到768维特征，将嵌入特征与可学习的位置编码送入DeiT中，并在每个组滤波器开头添加CLS和DIST(蒸馏标志)。最后使用DeiT的decoder输出并投影到1维256的潜代码。CLS和DIST用于音频情感、风格和内容的分类。</p><p>重建连接：<br>每一段音频进行了内容、情绪和风格的解缠，内容解缠通过替换相同内容，不同说话人的内容向量最终还原出原始的组滤波器达成。而情绪和风格解缠通过交换同一个人不同音频对的情绪和风格向量实现。对每个音频四元组都会进行实验，如下图所示，左侧两个为同一说话人音频对，右侧为同一说话人音频对。<br><img src="/2024/03/21/amuse/Distentanglement_Detail.jpg" alt="Distentanglement_Detail"></p><p>使用BEAT数据集重视10s音频段进行训练，其中包含情感和主体分类。在训练期间，一个样本由四个不同的音频（a_1=(c_1, e_1, s_1), a_2=(c2, e1, s1), a_3=(c1, e1, s2), a_4=(c2, e1, s2)）、有两个不同的内容c1、c2（即两个不同的脚本）、两种不同风格的s1、s2（由两个不同的主题说）和相同的情感e1组成。训练过程采用了大量的损失函数，L_self为重建loss，衡量生成与原始组滤波器的相似程度。L_con确保不同风格(说话人)相同内容的两段音频的内容潜向量一致。L_emo和L_sty通过一个线性投影头投影到分类向量中，计算情绪、风格分类交叉熵。其中n_e=8，n_s=30代表数据集中的8种情绪和30个主。<br><strong>后面关于交换损失的内容还没有看懂，style如果代表个人风格的话，为什么相同的person会有不同的style，难道subject和person在论文里是不同的吗</strong>为了保证解缠，使用了情绪、风格和内容的交叉重建损失。给定同一说话人同一情绪的不同说话内容，交换其中的风格向量，然后解码为原始音频。由于每个四元组只有一种情绪，所以emotion的交叉重建损失等于原始音频。</p></li><li><p>Gesture Genration Model</p><p>使用粗糙骨架数据进行训练的方法：<br>作者测量了诸如DSG、CaMN、MoGlow的方法，这些方法产生的骨架转换为SMPL-X模型后，出现了失真的姿势和穿模的现象。</p><p>消融实验：<br>首先是speech disentangled model，适用年龄8层线性AE将音频的MFCC特征变化为单个潜向量m。<br>其次是去掉运动先验，将运动先验组件替换为线性投影层，模型无法收敛且会产生静态的运动。</p></li><li><p>Motion Feature Extractor Model</p><p>编码器在运动序列前添加CLS token并队输出的CLS token手势使用情绪分类的交叉损失熵。</p></li><li><p>Gesture Emotions And Semantics</p><p>在latent space上计算SRGR和手势情感准确率，在动作序列上计算beat align分数。</p><p>SRGR计算：<br>计算一个片段内每一帧成功回归的关节数目(也称Probability of Correct Keypoint，PCK)，SRGR可以有效反应有效手势的多样性。基于已有的工作，对手势语义关联度进行打分，分为四类beat(有节奏运动)、iconic(代表性运动)、deictic(有指示性/指向性的动作)、metaphoric(有象征意义的)即得分由低到高。具体公式如下所示，注意计算该评估指标需要GT语义分数进行计算。</p><p>GT语义分数：<br>BEAT数据集提供了该分数，作者展示了同一个人在不同情绪下的语义分数以及不同人在相同情绪下的语义分数。前者展现了对于每种情绪的个人风格，后者展现了不同人对于同一种情绪、同一语义表达的独特风格。<br><img src="/2024/03/21/amuse/emotional_gesture_variation.jpg" alt="emotional_gesture_variation"><br><img src="/2024/03/21/amuse/emotional_gesture_individuality.jpg" alt="emotional_gesture_individuality"></p><p>BEAT alighment:<br>使用了6个关节：左腕、左肘、左肩、右腕、右肘和右肩进行衡量。</p><p>Gesture emotion accuray:<br>AMUSE和和AMUSE-Edit的手势情绪识别准确率为46.76%和34.18%，然而GT序列也仅仅64.04%。<br>后面有一段关于协方差矩阵的内容，这段分析内容我目前没有看懂。</p></li></ol><h2 id="补充部分">补充部分</h2><p>CLS token，在ViT中使用CLS token作为头部，与其它patch合在一起，共同送到transformer中进行编码，这样可以通过CLS token进行图像的分类，而不需采用每个patch平均值等方法进行图像分类。CLS token作为头部，综合了整个序列的信息，能够对整个序列进行代表。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Taming Diffusion Models</title>
      <link href="/2024/03/19/Taming-Diffusion-Models/"/>
      <url>/2024/03/19/Taming-Diffusion-Models/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract-and-introduction">Abstract And Introduction</h2><p>学习目标：基于音频对齐的手势分布，产生高质量的内容。 主要关注多模态、与语音的关联性以及时间一致性。</p><p>diffsion phase：对手势序列逐渐加噪</p><p>generation phase：建模为一个参数化的马尔可夫链，并使用条件的上下文音频剪辑特征来去噪手势</p><p>Diffusion Audio-Gesture Transformer（使用隐式无分类扩散指导）</p><p>Diffusion Gesture Stabilizer 消除时间不一致性</p><h2 id="pipeline">PipeLine</h2><p><img src="/2024/03/19/Taming-Diffusion-Models/pipeline.jpg" alt="pipeline"></p><ol><li><p>Problem Formulation</p><p>对于N帧的片段，提取音频序列a，并使用OpenPose估计骨架序列x，并将骨架处理为方向向量p(即两个关键点之间的方向向量，每帧共J-1个，其中J为关节数)。diffusion去噪过程通过音频序列a，前M帧的姿势作为控制条件，合成骨架序列。最后整个建模过程通过最小化真实骨架与估计骨架的差异进行优化。</p></li><li><p>手势空间的Forward和Reverse过程</p><p>Forward Diffusion Process：通过预定好方差，估计先验分布，一步步向数据中添加高斯分布，最终变成符合正态分布的纯噪声。</p><p>Reverse Conditional Gesture Generation：这一过程需要估计x_0到x_T的联合分布。在去噪过程中，使用后验分布，从高斯分布中采样一个噪声后，利用预定的方差做去噪，将该方差设置为未经训练的时间依赖常数。将音频a和初始pose p_1:M作为上下文信息c加入到去噪过程中，实现音频-手势同步的功能。</p><p>Training Objective(具体见论文，这个地方看的不是很懂)：优化lower bound(两个分布的负数最大似然)，消除其中的常熟项变为KL散度。接着使用重参数化，可以将优化目标转化为MSE Loss。在训练时，采用了条件控制和非条件控制联合控制的方法，并使用了一个P_uncond来替换上下文c，实现非条件的设置。</p></li><li><p>Diffusion Audio-Gesture Transformer</p><p>该部分主要未来解决目标序列和上下文信息c间存在的时间依赖，相比图像生成这种时间不变性的任务更加复杂，需要解决非自回归、条件控制生成过程中的结果一致性问题。在这里选择使用Transformer建模序列数据，将噪声手势x_t和上下文信息按照特征通道拼接，每一帧的骨架和上下文信息作为一个单独的token，通过self attention来捕捉长期依赖。</p></li><li><p>Diffusion Gesture Stabilizer</p><p>在DDPM的采样过程中，引入一个变量在z来保证合成的多样性。然而引入的z在t比较小的时候可能会引起一些时间不一致性，因此作者对多样性和时间一致性进行了平衡，通过退火的方式，将方差逐渐降低，熵热转化为熵冷。</p><p>首先设置一个阈值，，当采样步骤t大于阈值采用原本的策略，小于等于阈值后采用退火策略，其初始值z_0同样符合正态分布。</p><p>接着使用平滑的采样，在z_0的基础上通过与diffusion forward类似的采样方式采样z_1到z_n，其中的超参数采用非递减的方式。最后z_0到z_n的联合分布作为新的z。</p></li><li><p>Implicit Classifier-free Guidence</p><p>由于手势生成语音这种隐式映射，多对多的性质，难以使用显示分类器就行指导。作者通过额外训练一个不受条件控制的diffusion model来隐式指导合成。</p></li></ol><h2 id="实验">实验</h2><ol><li><p>数据集</p><p>TED Gesture：TED手势数据集包含了1,766个不同叙述者的TED视频，涵盖了不同的主题。用15 FPS重新采样姿态，以10步幅获得长度为34的帧段。<br>TED Expressive：然而TED手势中的姿势只包含10个上半身关键点，没有生动的手指运动，但TED表达数据集进一步表达了手指和身体的运动。利用最先进的三维姿态估计器ExPose来完全捕获数据中的姿态信息。因此，TEDExprist标注了43个关键点的3D坐标，包括13个上肢关节和30个手指关节</p></li><li><p>评估指标</p><p>Fr´echet Gesture Distance(FGD)：可以衡量合成手势分布于真实数据分布的距离，之前工作定义了一个FGD特征提取器，能够提取骨架序列的特征，用于比较数据分布。</p><p>Beat Consistency Score(BC)：通过计算相邻帧骨架变化绝对角MACC，然后计算变换速率，并取一阶导数的局部最优值高于阈值的部分作为运动节拍，使用音频节拍检测器检测音频节拍，最后计算二者节拍一致性。</p><p>Diversity：使用生成手势和对应输入的方差进行计算。同样使用FGD提取后的特征计算平均距离。</p><p>User Study</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DiffStyleGesture</title>
      <link href="/2024/03/09/DiffStyleGesture/"/>
      <url>/2024/03/09/DiffStyleGesture/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract-and-introduction">Abstract And Introduction</h2><p>提出了speech-to-gesture的一些核心目标<br>1. 匹配文本的节奏和语义<br>2. 多样性(非唯一解)<br>3. 风格化——可控<br>4. 考虑时间序列中的时间对齐问题——时间感知<br>5. 给定任意长度均可以匹配</p><p>GAN-based方法：合成时遭遇mode collapse，是指GAN的生成器只会生成相似的样本，来骗过判别器，这有可能导致生成器措施一些数据分布中的重要信息，没有捕捉到数据分布的完整结构，陷入局部最优解。比如一个GAN使用牛、羊、鸡的数据进行训练，然而GAN对于鸡的合成很好，羊和牛的数据基本不能合成。</p><p>VAE、Flow需要在生成质量和多样性上做平衡</p><p>使用Diffusion Model的原因：能够学习到复杂的数据分布</p><p>cross-local attention捕捉手势局部信息，self-attention捕捉全局信息。利用WavLM提取音频特征(包含语音的、情感的和其它信息)</p><h2 id="pipeline">PipeLine</h2><ol><li><p>手势生成Difussion Model<br>diffusion process q： 被建模成一个马尔可夫加噪过程，通过多步随机噪声的添加形成纯噪声。</p><p>denoising process p_θ：通过t时刻噪声学习对应的参数μ_θ和Σ_θ，可以得出t时刻噪声手势，通过优化真实噪声和预测噪声之间的差异训练结果。采样时，通过固定方差的方法学习平均噪声。</p><p>整体框架：给定长度为N的手势和对应的条件，预测出原始的手势。这里与diffusion model不同，并非预测噪声而是预测信号本身。即，给定噪声图x_t，对应噪声步骤t和条件c，denoising模块预测出原始的手势。使用Huber Loss集成了MAE和MSE的优点，设定了一个超参数作为阈值，当真实值与预测值相差小于阈值时，采用平方误差MSE，当差值大于阈值时，采用线性误差MAE，能够对异常值更加鲁棒。可以通过交叉验证来寻找最优的阈值。</p><p><img src="/2024/03/09/DiffStyleGesture/pipeline.jpg" alt="pipeline"></p></li><li><p>基于注意力机制语音驱动手势生成模型<br>diffusion model通过噪声手势，噪声步骤t和控制条件c生成手势，其中条件c包括音频a，风格s和种子手势d，整个预处理过程可以分为几个步骤。</p><p>Noising step：<br>从1到T的均匀分布中随机采样，通过MLP后得到T空间的256维潜代码</p><p>Noisy gesture：<br>第t步的噪声手势x_t从标准正态分布中进行采样。在采样时，初始的噪声手势从标注正态分布中采样，其它t &lt; T的噪声手势是之前加噪的结果，通过线性层从1141维调整到潜空间G的256维。</p><p>Audio：<br>音频被降采样到16kHz，通过WavLMLarge预训练模型提取特征，再通过线性插值让音频特征和手势对齐为20fps，最后使用一个线性层将维度降到64维生成最后的音频特征序列。</p><p>Style：<br>风格采用独热编码(6维)，并通过线性层映射64维潜空间S的代码。</p><p>Seed Gesture：<br>seed gesture能够在进行连续合成时进行平滑的转换。将手势划分为g∈(8+N)*1141片段，g中前8帧作为seed gesture d。剩余的N帧用作真实手势来计算loss。之后使用线性层将特征映射到192维的潜空间D。生成手势为4，并且为20fps，所以N为80。</p><p>denoising module：<br>将seed gesture D和style S连接成256维向量，再与T步噪声生成的向量相加得到Z。接着将Z进行重复堆叠与音频和噪声手势特征相对齐。之后与A和G相结合作为cross-local attention网络的输入。cross-local attention基于<strong>Routing Transformer</strong>，该网络能够很好的捕捉局部的特征。<br>之后将cross-local attention的输出与Z连接送入self-attention网络中，计算数据序列元素中的依赖，并使用mask M来决定注意力机制的模式。同样使用相对位置编码(RPE)保证时间对于手势的影响是不变的。最后经过self-attention输出的结果被映射回1141维。</p><p>Sample Module：<br>第一个片段的seed gesture随机从数据集中采样或设置为平均手势。后面片段的gesture为上一个片段的最后8帧手势。对于每一个片段，在每一步的加噪t过程中，使用去噪模块预测干净的手势，并将噪声加到t-1的加噪步骤中，重复过程直到0。</p></li><li><p>Style-controllable Gesture Generation<br>手势的风格除了受音频控制，还受风格s和种子手势d控制。通过结合受s和d控制的条件结果和不受d和s控制的非条件结果，来控制手势的风格。<strong>这块看的不是很懂，从后面的对比实验来看，应该是指音频中本身就耦合了情感，完全通过style s来指导手势生成不够合理。</strong></p></li></ol><h2 id="实验部分">实验部分</h2><p>Gesture Controllability<strong>这段看起来比较重要</strong></p><ol><li><p>Style Control</p><p>作者选取了两句中性语音，即语音并不会影响手势风格，并设置λ为1来生成old、sad、relaxed、angry和happy等多种风格的手，这些手势明显不同，符合了各自的style。将高维数据使用t-SNE降维可视化后，发现数据分布确实发生了改变，起到了控制的效果。但同时neutral和happy的分布耦合在了一起，作者分析了可能时WavLM特征中包含了情绪和语义信息。<strong>但是t-SNE和结果图已经证明了通过改变λ来编辑手势确实是有效果的</strong></p></li><li><p>Style Edit</p><p>作者进一步探索了λ和style的关系，当尝试使用happy的音频生成sad的手势，设置λ为1并不会影响结果，因为模型从语音中学习到了happy的情绪。证明语音中自有的style和手势的style耦合在了一起，控制λ可以更好的编辑手势风格。</p><p>此外，作者探索了style密度、与人类相似度、语音适配度的联系。也尝试了使用一段neutral的语音，但是使用λ为1，3，5来进行实验，实验结果发现，随着λ的增大，手势与风格的适配性提高，但是手势与语音的适配性、手势的人类相似度降低，符合常理。</p><p><strong>语音的style和手势的style本身耦合在了一起，通过style来控制语音驱动的手势本身有些矛盾。</strong></p></li><li><p>Gesture Diversity<br>模型的架构决定了输出的多样性，相同的语音和风格下，不同的noisy gesture和seed gesture产生不同的手势。同时seed gesture中的mask也可以控制生成的多样性和不同的初始位置姿势。<strong>可以理解为同一个人在说同一段的语音时，其起手势(seed gesture 和 mask)与不同时刻可能做的手势(nosiy gesture)是不同的，而语音的韵律、情感以及额外输入style才是控制手势的主要因素。</strong></p></li><li><p>消融实验<br>评价指标：生成手势与真实人类的相似程度、手势与语音匹配的相似程度<br>1） WavLM替换为MFCC<br>2） 去掉cross-local attention<br>3） 去掉self-attention<br>4） 去掉所有attention改为GRU架构<br>5） 将cross-local attention替换为forward attention</p></li></ol><h1 id="数据集">数据集</h1><p>Zeroeggs，其中包含67个由女演员说英语的独白序列，涵盖19种不同的运动风格，数据集的总长度为135分钟。</p><h2 id="我认为论文中可能的研究点">我认为论文中可能的研究点</h2><ol><li>提升特征处理以及手势生成的速度</li><li>如何更好的设置一个style表示方式，现在并没有解决风格耦合的问题</li><li>该数据集中只包含一个人对应的语音和骨骼序列，难免受限于整个数据集的分布</li><li>该文章中给出的大部分指标都是在网站上的用户打分，感觉还需要寻找一些能够定性计算的指标</li><li>音频本身使用WavLM编码器，这个方法为后面的耦合带来了一定的影响，有待考虑</li><li>其它问题有待验证</li></ol><h2 id="补充部分">补充部分</h2><ol><li><p>t-SNE数据降维与高维数据可视化<br>高维数据通常具备稀疏的特性，如果要进行采样需要大量的数据。同时高维空间中数据全部位于超立方体边缘，因此在使用欧式距离测算距离时大距离和小距离的差异并不明显。t-SNE的降维方法能够避免降维的拥挤问题，其将高维数据映射到二维或三维空间，并基于概率分布的相似性测量样本之间的相似度，适合可视化高纬度的数据，比较数据分布之间的差异。</p></li><li><p>Routing Transformer<br>未来解决多模态推理所需要的不同感受野的信息捕捉，为transformer添加了一种路由机制，在不增加计算和显存开销的情况下，进行attention的选择。可以理解为在transformer中添加了一种类似KNN的路由机制，每次计算attention前先筛选序列中与自身相似/相关的信息，只对这些部分计算attention来更好的捕捉到所需的局部信息。</p></li></ol><h1 id="api补充">api补充</h1><ol><li><p>Librosa 是一个用于音频和音乐信号处理的 Python 库。它提供了一系列功能，包括加载音频文件、频谱分析、特征提取、音频可视化等。Librosa 在音乐信息检索、音频分析、音乐生成等领域被广泛应用。你可以使用 Librosa 来实现一些音频处理任务，比如提取音频特征（如梅尔频谱系数、色度特征等）、进行音频数据的可视化、进行音频信号的时频分析等。如果你有具体的问题或者需要帮助，欢迎向我提问！</p></li><li><p>GELU，对于一个输入x，在其前面乘一个伯努利分布，函数的取值图和导数图如下，使得x越大该值约容易被保留，反之则越容易被舍弃，但是同时保留了概率，不会像RELU那样出现0的情况。<br><img src="/2024/03/09/DiffStyleGesture/GELU.jpg" alt="GELU"></p></li><li><p>np.cumprod(array, dim)， 可以让数组按照指定维度进行累乘，不指定的话默认会展开为一维</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Code-Reading</title>
      <link href="/2024/03/07/Code-Reading/"/>
      <url>/2024/03/07/Code-Reading/</url>
      
        <content type="html"><![CDATA[<h2 id="随笔记罢了">随笔记罢了</h2><pre><code>torch.backends.cudnn.benchmark是PyTorch中用于提高运行效率的一个设置选项。当将该选项设置为True时，PyTorch会在每个卷积操作执行时自动寻找最适合当前配置的高效算法，从而提高运行速度。LPIPS用于计算图像之间相似性，将要比较的两张图片通过预训练号的卷积神经网络提取特征，并对特征进行归一化处理，使得各个维度具有一致的重要性。最后计算图像在特征空间中的差异代表感知上的相似性。ID Loss，通过卷积神经网络让同一个人的图片看起来为同一个人。conf_map_mirror是啥randomly_sample_camera_poses:随机采样相机参数，输出新视角图像用nn.Identity</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Generating Holistic 3D Human Motion from Speech</title>
      <link href="/2024/03/04/TALK-SHOW/"/>
      <url>/2024/03/04/TALK-SHOW/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>比较重要的观点<br>对于一个说话人主要可以分为头、身体和手势，其中脸部与语音高度相关，而身体与手势并不高度相关。这就意味着嘴型应该高度与语音对应，而身体、手势甚至头的姿势(整体)应当与说话内容、情绪弱相关。这就意味着同一段语音对应着一个解空间，优化的目标为寻找空间中比较优质的解。</p><h2 id="相关工作">相关工作</h2><p>1.全身重建方法：<br>通过SMPL-X模型拟合离线检测器检测出的2D关键点，SMPLify-X采用这种方法，也是文章对于说话人视频处理的基准方法。</p><p>2.数据集制作<br>PIXIE: Collaborative Regression of Expressive Bodies 用于标注2D关键点<br>Real-time facial surface geometry from monocular video on mobile gpus. 用于标注3D关键点</p><p>3.从语音重建全身方法：<br>Rule-Based方法将语音映射到预先收集到的身体动作单元中。<br>Learning-Based方法基于一些语音-身体运动数据集。<br>Learning speech-driven 3d conversational gestures from video，这篇文章从语音中重建了3D面部网格、头和手的3D关键点，但是这些内容没有相互关联，同时产生的是确定性的解。</p><h2 id="数据集">数据集</h2><p>1.数据格式：<br>22K采样比率的音频对应30fps的3D身体mesh，包括4个说话人的26.9小时数据。由于采用的为SMPL-X模型，视频的p-GT通过SMPL-X参数表示，对于一个T帧的视频，其包括一个共享的身体形状参数β(300维)，姿势参数θ_{t}(T, 156)，共享的相机姿势参数θ_{c}(3维)，translation ϵ(3维)，面部表情(T, 100)。其中姿势参数包括3维下颚、63维身体和90维手势。</p><p>2.数据制作：<br>初始化方法——PIXIE、PyMAF-X和DECA分别检测身体姿势、手部姿势和下颚姿势，同时PIXIE估计相机参数和translation，并且假设相机是固定的。</p><pre><code>Data Term——(a)最关键的损失函数为关节重投影，SMPLify-X中将SMPL-X模型中的关节检测出来并进行重投影与OpenPose预测出的关节位置进行拟合。在该数据集中，采用了DeepLab V3的身体轮廓，MediaPipe的面部关键点和MICA的面部形状。(b)还添加了渲染图像与输入图像的光度损失来更好的捕捉面部细节。正则化——进行了三个假设，(a)视频序列中演讲者保持相同，通过人脸识别模型ArcFace检测，得到一致的形状参数β。(b)视频序列中全身的动作、面部表情和环境光随着时间平滑变化。(C)人物的自相交在现实世界不可能发生。</code></pre><h2 id="方法">方法</h2><p><img src="/2024/03/04/TALK-SHOW/pipeline.jpg" alt="pipeline"></p><p>1.先验知识：<br>面部运动由下颚参数和表情参数组成， 身体运动和手势运动又相应的姿势参数表示。</p><p>2.面部生成器：<br>输入为音频信号A和说话人身份I，生成器G_{f}输出103维的面部参数，采用了wav2vec2.0预训练权重，音频通过音频提取器和Transformer架构后输出768维特征并使用线性投影层降到256。输出的音频特征与独热编码的身份向量合并后放入decoder中，使用6层时间卷积网络和一层全连接层组成，并使用MSE损失训练编码器和解码器。</p><p>3.身体和手部生成器：<br>利用VQ-VAE训练身体和手部运动的多模态分布空间。将身体和手势运动编码和量子化到两个有限的codebooks，通过采样即可组成不同的身体和手势组合。引入跨条件自回归模型作为预测器，其在身体和手上有交叉条件，保证整个完整身体的同步。最后解码从分布中采样得到的codebooks索引。</p><p>4.表示：<br>MFCC(Mel Frequency Cesptral Cofficients),是一种常用于语音信号处理的特征的提取方法。作者用64维的MFCC特征表示身体和手部运动的生成，因为身体、手部姿势于韵律、节奏更加相关而不是发音，低纬度的MFCC特征足以从音频中生成可靠的手势。此外，不同人的说话风格不同，使用I来区分这些风格。<strong>我认为这部分可能有一些问题，同一个人可能具备不同的说话风格，不同的人也可能出于模仿/特殊用途采用相似的姿势，身份与风格不应该混为一谈。</strong></p><p>5.Compositional Quantized Motion Codebooks：<br>利用VQ-VAE将身体和手势分到两个可组合的空间，以4个连续的姿势对应到一个特征嵌入，并将其映射到与其最近的code，身体和手势对应的code送入到解码器种进行合成。编码器、解码器和codebook使用L_{VQ}损失函数单独进行训练<br>L_VQ分别三部分，第一部分为MESE重建损失，第二部分sg计算codebooks的损失，第三部分则是防止优化过程中编码器输入与codebooks离的太远，用于稳定训练。</p><p>6.跨条件自回归建模<br>给定当前的身体和姿势的code，以及音频信号，作者设计的时间自回归模型能够预测下一个可能的code，使用身份I来区别不同的手势风格。此外，作者设计了一个交叉条件建模手和身体之间的互信息，即当前的身体和手势运动依赖过去的身体手势运动，同时当前的身体运动也负责预测当前手部运动的分布。优化过程种采用了teacher-forcing的办法，同时使用交叉熵进行优化。推理阶段模型预测出未来身体和手部运动的多种分布，通过采样的到codebook中的索引，查找得到code后送入解码器中进行合成。</p><p>7.整体流程<br>人脸生成器通过编码-解码结构将音频和身份作为输入，生成对应的jaw和表情参数。</p><pre><code>身体和手部运动生成器先使用VQ-VAE学习到已有身体和手势运动的离散潜空间codebooks，自回归模型根据输入身份和音频的梅尔谱图，以一种身体和手交叉条件、自回归的方式预测当前潜代码，并寻找codebooks里最近的code，最后解码出当前的身体和手势。</code></pre><h2 id="实验部分">实验部分</h2><ol><li><p>评估指标：</p><p>主要包括面部的真实性与同步性；身体和手势的真实性和多样性</p><p>L2-距离：p-GT，生成面部的landmark点(包括下颚关节和嘴唇形状)<br>LVD：计算生成的面部特征点和真实面部特征点之间的速度差异，从而衡量与输入语音与面部表情之间的同步速度。<br>RS：使用了一个鉴别器区分真实和假的人，计算真实感分数<br>Variation：通过16个样本身体和手部运动的方差来计算多样性<strong>这个多样性的评估感觉有些草率</strong></p></li></ol><h2 id="补充内容">补充内容</h2><h3 id="vq-vae">VQ-VAE</h3><pre><code>AE——&gt;VAE——&gt;VQ-VAEAE这种编码—解码的结构，编码器将图片压缩成一个向量，解码器将向量解码成图片VAE解决了AE种编码空间不完全的问题，将编码约束为伪正态分布，使得解码器对于任意输入的符合正态分布的随机向量都可以解码出图像。VQ-VAE解决的是VAE编码连续的问题，VAE由于连续编码的原因，当编码向量略微改变后输出的图像变化不大，VQ-VAE认为将图像编码成离散向量更加自然。文章主要客服了以下几个问题1. VQ-VAE将图像编码到离散向量后难以采样，与AE有相同的缺陷，无法进行图像生成。作者参考NLP种word embedding的做法，将编码器的输出与嵌入空间种的向量求K近邻并用最近距离的向量替换掉原本的向量。嵌入空间假设为一个离散的分布，PixelCNN这个工作可以从图像种学习到每个像素每个通道的取值概率分布，在这里可以学习编码器编码出的向量(可以看作小图像)的离散空间分布，从而解决采样的问题。2. VQ-VAE提出了一种sg(stop gradient)技术来解决向量替换后无法梯度传播的问题。前向传播时sg保持不变，使用嵌入后的向量进行解码后计算损失；反向传播时sg为0，而是用嵌入前的向量进行解码后计算损失，相当于把嵌入后向量的梯度直接复制到了嵌入前向量的梯度。即L = x - decoder(z_e + sg(z_q - z_e).detach())3. VQ-VAE在优化时还设计了约束让z_e和z_q别太远，同时将编码器和嵌入向量的学习速度设置了不同的速度。</code></pre><h3 id="tearcher-force-scheme">tearcher-force scheme</h3><pre><code>这代表了一种训练方式，即跟着老师(ground-truth)走，与常见的上一个state作为下一下state的输入不同，这种模式的输入为上一个state对应的真实数据。这种做法通常在序列预测中使用，可以加速模型收敛，提高模型的稳定性，但会导致模型的泛化能力变差。</code></pre><h2 id="代码调试">代码调试</h2><ol><li><p>数据集加载<br>SmplxDataset:<br>motion_fn(pkl)文件里内容:<br><img src="/2024/03/04/TALK-SHOW/motion_fn.jpg" alt="motion_fn"></p><p>_load_them_all()，从pkl中导入betas，姿势表情相关的参数，通过音频生成64维MFCC特征。</p><p>可以看到left_hand_pose和right_hand_pose都是12维，他们通过后面通过矩阵相乘得到45维</p><p>源码在写时将所有的参数写入到pkl文件中，后面可能存在着重复加载，会拖慢模型速度。</p></li><li><p>权重加载<br><img src="/2024/03/04/TALK-SHOW/pkl_weights.jpg" alt="pkl_weights"></p></li></ol><h2 id="一些api记录">一些api记录</h2><pre><code>torch.chunk(tensor, dim)，将tensor沿着指定dim分为指定份数torch.identity(tensor)，不变的传递tensorregister_buffer()，将参数注册为模型的参数，可以被torch.save保存到字典中，但过程中并不会进行更新</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NerFFaceLighting</title>
      <link href="/2024/01/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
      <url>/2024/01/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="abstract">Abstract</h2><p>文章中的所有图片所使用的光照均可看为右下角的一个球光照<br>关键贡献：</p><ol><li>从外观和光照混合的表达中蒸馏出来他们的解缠表达，涉及两个三平面</li><li>重新设置了正则化项提升队不可见光照条件下的泛化能力<br>文章实现了3D感知真实肖像的重光照</li></ol><h2 id="pipline">Pipline</h2><ol><li><p>backbone</p><p>backbone采用原始的EG3D</p></li><li><p>几何外观与光照的解缠</p><p>首先关于pseudo-albedo(伪反照率)和shading(阴影)，其中pseudo-albedo是指在计算机视觉中用于表示物体表面颜色或反射率的值。它通常是一个表示物体表面特性的值，而不考虑光照条件或阴影的影响。shading在计算机图形学中用于模拟光照效果，通过模拟光源的位置、光照强度和物体表面法线方向等信息来生成物体表面上的明暗效果。</p><p>这一步旨在将几何外观与光照的解缠，通过将二者放在两个不同的潜空间实现解缠。</p><p>具体方法基于EG3D，将高斯噪声通过StyleGAN2 Generator生成两个tri-plane表示，第一个为原始tri-plane表示几何和外观三平面(我认为这部分应该也包含光照，并没有去光照的步骤，文章只说是假设，可能EG3D本身生成三平面就光照均匀？)，第二个为shading tri-plane，其StyleGAN2 通过光照Mapping Network编码的SH得到光照潜代码，并在原始的StyleGAN2 Generator后面添加几个合成模块，由光照潜代码作为condition得到shading tri-plane。原始tri-plane采样点通过decoder输出体密度σ和反照率α，shading tri-plane采样点通过shading decoder输出阴影s，最终颜色c=σ*s。通过体渲染，得到阴影图S，带光照的I-RGB和伪反照率图A，后两者通过超分辨网络得到最终的人脸肖像图和伪反照率图。同样鉴别器也使用了两个，原始鉴别器使用相机参数作为condition，光照鉴别器同时使用相机参数和球谐作为condition。</p></li><li><p>减少模糊和增强泛化性</p><p>上一步解缠并没有合理的约束导致解缠的伪反照率和阴影是是高度模糊的。对于一个特定的人，不同的生成结果应该具备相似的几何和不同的texture(外观和阴影)，一个可行的思路是如果这些这些结果的阴影残留分布完整活着是一个特定的几何体，则可以消除掉伪反照率组件上的阴影残留。问题在于在对这些生成结果进行平均时无法做到只改变伪反照率组件上的阴影残留而不改变外观。文章采用对shading组件进行显式求平均，对伪反照率组件上的残留shading做隐式平均来解决这个问题。</p><p>考虑同一个主体的生成的两个不同例子，它们二者几何相近但是光照不同，分别记为a和b，通过上一步的解缠可以得到各自阴影和伪反照率组件，如果伪反照率和阴影组件，那么a的阴影图和b的伪反照率图结合得到的ab应该能还原出a。然而由于两个组件没有解缠，阴影图无法适应所有对应图像的伪反照率图，可以通过优化ab与a来使伪反照率图中残留阴影信息被提取出来使得阴影组件具备泛化能力。在文章中相同几何相近但texture不同的图像通过style-mixing的方式实现。ab与a之间的L1损失为L_cross。</p><p>以上方法解决了一些模糊问题，但由于没有使用显示的光照模型作为约束，会出现伪反照率组件中的外观信息被提取到阴影组件中导致颜色其中颜色下降。在文章里通过软约束使伪反照率图和带阴影的肖像图看起来一致，通过阴影图来减少二者之间的差异。具体做法为肖像图和伪反照率图做LPIPS(感知损失)，其中带阴影的肖像图与阴影组件做比率混合来模拟去掉阴影，为了利用隐式模型的泛化性，在原本的潜代码中添加了正态分布的扰动来增强模型对于可见光和不可见光条件下的泛化性(这些信息被隐藏在数据集的光照分布中，通过这种微小的扰动提高模型的泛化能力)。LPIPS损失记为L_sim。</p><p>同理为了减少运行的成本和内存消耗，采用了StyleGAN2的lazy regularization策略实现正则化损失。</p></li><li><p>3D感知重光照</p><p>这一步对EG3D做了pivotal tuning inversion(PTI)，主要可以分为两个步骤，寻找最为接近的潜代码和fine-tune生成器的权重。</p><p>寻找latent code，这一步按照描述需要寻找最近的潜代码w和对应的光照潜代码w_sh，潜代码w部分设计了一个Encoder通过固定generator优化encoder的方式来获得潜代码，定义了损失函数L_sim（与上一节的并不相同）进行优化，该损失包含两部分。第一部分同样为伪反照率图(翻转)和真是图像的LPIPS损失，第二部分伪二者的FID，使得得到的潜代码w在经过生成器生成后与真实图像相接近。同样w包含了残留阴影，按照比较对称但阴影导致结果并不对称的理论，将反照率图与翻转的反照率图做LPIPS得到翻转Loss，通过改loss能减少伪反照率组件上的阴影残留。</p><p>为了保证重建图像的真实性，还需要寻找光照潜代码w_sh，文章对数据集中的数据进行了光照估计，通过优化w_sh的方式让光照条件拟合Encoder输出的伪反照率组件。</p><p>fine-tune生成器，需要对原始的三平面生成器和阴影三平面生成器都进行fine-tune，除使用生成图像与真实图像的L1和LPIPS损失，作者还使用了一些正则化项使得重建的图像准确而且组件合理的分解。首先使用了翻转伪反照率图和真是图像之间的LPIPS损失L_Refine，又通过伪反照率图和翻转伪反照率图的LPIPS损失减少残留阴影。最后使用人脸解析模块提取人眼部分，对生成图像和真是图像的眼部区域做LPIPS损失。同样在fine-tune这一步中固定w和w_sh。</p></li></ol><h2 id="文章复现">文章复现</h2><ol><li><p>环境准备</p><p>pyshtools安装可能会缺少BLAS库，可以尝试conda install libblas以及sudo apt-get install libopenblas-dev解决<br>imageio-ffmpeg常用的0.4.3和0.4.8的版本，前者没有audio_path参数，后者有。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
